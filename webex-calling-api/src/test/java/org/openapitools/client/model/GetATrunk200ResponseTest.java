// Copyright 2025 Cisco Systems Inc.
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in
// all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
// THE SOFTWARE.

/*
 * All Webex calling API
 * Webex calling API specifications
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.GetATrunk200ResponseCustomer;
import org.openapitools.client.model.GetATrunk200ResponseResponseStatus;
import org.openapitools.client.model.ReadTheListOfTrunks200ResponseTrunksInnerLocation;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for GetATrunk200Response
 */
public class GetATrunk200ResponseTest {
    private final GetATrunk200Response model = new GetATrunk200Response();

    /**
     * Model tests for GetATrunk200Response
     */
    @Test
    public void testGetATrunk200Response() {
        // TODO: test GetATrunk200Response
    }

    /**
     * Test the property 'name'
     */
    @Test
    public void nameTest() {
        // TODO: test name
    }

    /**
     * Test the property 'customer'
     */
    @Test
    public void customerTest() {
        // TODO: test customer
    }

    /**
     * Test the property 'location'
     */
    @Test
    public void locationTest() {
        // TODO: test location
    }

    /**
     * Test the property 'otgDtgId'
     */
    @Test
    public void otgDtgIdTest() {
        // TODO: test otgDtgId
    }

    /**
     * Test the property 'linePort'
     */
    @Test
    public void linePortTest() {
        // TODO: test linePort
    }

    /**
     * Test the property 'locationsUsingTrunk'
     */
    @Test
    public void locationsUsingTrunkTest() {
        // TODO: test locationsUsingTrunk
    }

    /**
     * Test the property 'pilotUserId'
     */
    @Test
    public void pilotUserIdTest() {
        // TODO: test pilotUserId
    }

    /**
     * Test the property 'outboundProxy'
     */
    @Test
    public void outboundProxyTest() {
        // TODO: test outboundProxy
    }

    /**
     * Test the property 'sipAuthenticationUserName'
     */
    @Test
    public void sipAuthenticationUserNameTest() {
        // TODO: test sipAuthenticationUserName
    }

    /**
     * Test the property 'status'
     */
    @Test
    public void statusTest() {
        // TODO: test status
    }

    /**
     * Test the property 'errorCodes'
     */
    @Test
    public void errorCodesTest() {
        // TODO: test errorCodes
    }

    /**
     * Test the property 'responseStatus'
     */
    @Test
    public void responseStatusTest() {
        // TODO: test responseStatus
    }

    /**
     * Test the property 'dualIdentitySupportEnabled'
     */
    @Test
    public void dualIdentitySupportEnabledTest() {
        // TODO: test dualIdentitySupportEnabled
    }

    /**
     * Test the property 'trunkType'
     */
    @Test
    public void trunkTypeTest() {
        // TODO: test trunkType
    }

    /**
     * Test the property 'deviceType'
     */
    @Test
    public void deviceTypeTest() {
        // TODO: test deviceType
    }

    /**
     * Test the property 'address'
     */
    @Test
    public void addressTest() {
        // TODO: test address
    }

    /**
     * Test the property 'domain'
     */
    @Test
    public void domainTest() {
        // TODO: test domain
    }

    /**
     * Test the property 'port'
     */
    @Test
    public void portTest() {
        // TODO: test port
    }

    /**
     * Test the property 'maxConcurrentCalls'
     */
    @Test
    public void maxConcurrentCallsTest() {
        // TODO: test maxConcurrentCalls
    }

    /**
     * Test the property 'isRestrictedToDedicatedInstance'
     */
    @Test
    public void isRestrictedToDedicatedInstanceTest() {
        // TODO: test isRestrictedToDedicatedInstance
    }

}
