// Copyright 2025 Cisco Systems Inc.
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in
// all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
// THE SOFTWARE.

/*
 * All Webex calling API
 * Webex calling API specifications
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for CreateADeviceByMACAddress200Response
 */
public class CreateADeviceByMACAddress200ResponseTest {
    private final CreateADeviceByMACAddress200Response model = new CreateADeviceByMACAddress200Response();

    /**
     * Model tests for CreateADeviceByMACAddress200Response
     */
    @Test
    public void testCreateADeviceByMACAddress200Response() {
        // TODO: test CreateADeviceByMACAddress200Response
    }

    /**
     * Test the property 'id'
     */
    @Test
    public void idTest() {
        // TODO: test id
    }

    /**
     * Test the property 'displayName'
     */
    @Test
    public void displayNameTest() {
        // TODO: test displayName
    }

    /**
     * Test the property 'placeId'
     */
    @Test
    public void placeIdTest() {
        // TODO: test placeId
    }

    /**
     * Test the property 'workspaceId'
     */
    @Test
    public void workspaceIdTest() {
        // TODO: test workspaceId
    }

    /**
     * Test the property 'personId'
     */
    @Test
    public void personIdTest() {
        // TODO: test personId
    }

    /**
     * Test the property 'orgId'
     */
    @Test
    public void orgIdTest() {
        // TODO: test orgId
    }

    /**
     * Test the property 'capabilities'
     */
    @Test
    public void capabilitiesTest() {
        // TODO: test capabilities
    }

    /**
     * Test the property 'permissions'
     */
    @Test
    public void permissionsTest() {
        // TODO: test permissions
    }

    /**
     * Test the property 'connectionStatus'
     */
    @Test
    public void connectionStatusTest() {
        // TODO: test connectionStatus
    }

    /**
     * Test the property 'product'
     */
    @Test
    public void productTest() {
        // TODO: test product
    }

    /**
     * Test the property 'type'
     */
    @Test
    public void typeTest() {
        // TODO: test type
    }

    /**
     * Test the property 'tags'
     */
    @Test
    public void tagsTest() {
        // TODO: test tags
    }

    /**
     * Test the property 'ip'
     */
    @Test
    public void ipTest() {
        // TODO: test ip
    }

    /**
     * Test the property 'activeInterface'
     */
    @Test
    public void activeInterfaceTest() {
        // TODO: test activeInterface
    }

    /**
     * Test the property 'mac'
     */
    @Test
    public void macTest() {
        // TODO: test mac
    }

    /**
     * Test the property 'primarySipUrl'
     */
    @Test
    public void primarySipUrlTest() {
        // TODO: test primarySipUrl
    }

    /**
     * Test the property 'sipUrls'
     */
    @Test
    public void sipUrlsTest() {
        // TODO: test sipUrls
    }

    /**
     * Test the property 'serial'
     */
    @Test
    public void serialTest() {
        // TODO: test serial
    }

    /**
     * Test the property 'software'
     */
    @Test
    public void softwareTest() {
        // TODO: test software
    }

    /**
     * Test the property 'upgradeChannel'
     */
    @Test
    public void upgradeChannelTest() {
        // TODO: test upgradeChannel
    }

    /**
     * Test the property 'created'
     */
    @Test
    public void createdTest() {
        // TODO: test created
    }

    /**
     * Test the property 'locationId'
     */
    @Test
    public void locationIdTest() {
        // TODO: test locationId
    }

    /**
     * Test the property 'workspaceLocationId'
     */
    @Test
    public void workspaceLocationIdTest() {
        // TODO: test workspaceLocationId
    }

    /**
     * Test the property 'errorCodes'
     */
    @Test
    public void errorCodesTest() {
        // TODO: test errorCodes
    }

    /**
     * Test the property 'firstSeen'
     */
    @Test
    public void firstSeenTest() {
        // TODO: test firstSeen
    }

    /**
     * Test the property 'lastSeen'
     */
    @Test
    public void lastSeenTest() {
        // TODO: test lastSeen
    }

    /**
     * Test the property 'managedBy'
     */
    @Test
    public void managedByTest() {
        // TODO: test managedBy
    }

    /**
     * Test the property 'devicePlatform'
     */
    @Test
    public void devicePlatformTest() {
        // TODO: test devicePlatform
    }

}
