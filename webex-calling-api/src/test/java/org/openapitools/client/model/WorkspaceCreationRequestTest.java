// Copyright 2025 Cisco Systems Inc.
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in
// all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
// THE SOFTWARE.

/*
 * All Webex calling API
 * Webex calling API specifications
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.Arrays;
import org.openapitools.client.model.CreateAWorkspaceRequestIndoorNavigation;
import org.openapitools.client.model.WorkspaceCreationRequestCalendar;
import org.openapitools.client.model.WorkspaceCreationRequestCalling;
import org.openapitools.client.model.WorkspaceCreationRequestDeviceHostedMeetings;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for WorkspaceCreationRequest
 */
public class WorkspaceCreationRequestTest {
    private final WorkspaceCreationRequest model = new WorkspaceCreationRequest();

    /**
     * Model tests for WorkspaceCreationRequest
     */
    @Test
    public void testWorkspaceCreationRequest() {
        // TODO: test WorkspaceCreationRequest
    }

    /**
     * Test the property 'displayName'
     */
    @Test
    public void displayNameTest() {
        // TODO: test displayName
    }

    /**
     * Test the property 'orgId'
     */
    @Test
    public void orgIdTest() {
        // TODO: test orgId
    }

    /**
     * Test the property 'locationId'
     */
    @Test
    public void locationIdTest() {
        // TODO: test locationId
    }

    /**
     * Test the property 'workspaceLocationId'
     */
    @Test
    public void workspaceLocationIdTest() {
        // TODO: test workspaceLocationId
    }

    /**
     * Test the property 'floorId'
     */
    @Test
    public void floorIdTest() {
        // TODO: test floorId
    }

    /**
     * Test the property 'capacity'
     */
    @Test
    public void capacityTest() {
        // TODO: test capacity
    }

    /**
     * Test the property 'type'
     */
    @Test
    public void typeTest() {
        // TODO: test type
    }

    /**
     * Test the property 'sipAddress'
     */
    @Test
    public void sipAddressTest() {
        // TODO: test sipAddress
    }

    /**
     * Test the property 'calling'
     */
    @Test
    public void callingTest() {
        // TODO: test calling
    }

    /**
     * Test the property 'calendar'
     */
    @Test
    public void calendarTest() {
        // TODO: test calendar
    }

    /**
     * Test the property 'notes'
     */
    @Test
    public void notesTest() {
        // TODO: test notes
    }

    /**
     * Test the property 'hotdeskingStatus'
     */
    @Test
    public void hotdeskingStatusTest() {
        // TODO: test hotdeskingStatus
    }

    /**
     * Test the property 'deviceHostedMeetings'
     */
    @Test
    public void deviceHostedMeetingsTest() {
        // TODO: test deviceHostedMeetings
    }

    /**
     * Test the property 'supportedDevices'
     */
    @Test
    public void supportedDevicesTest() {
        // TODO: test supportedDevices
    }

    /**
     * Test the property 'indoorNavigation'
     */
    @Test
    public void indoorNavigationTest() {
        // TODO: test indoorNavigation
    }

}
