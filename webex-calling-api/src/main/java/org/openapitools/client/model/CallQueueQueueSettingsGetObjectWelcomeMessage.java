// Copyright 2025 Cisco Systems Inc.
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in
// all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
// THE SOFTWARE.

/*
 * All Webex calling API
 * Webex calling API specifications
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Play a message when callers first reach the queue. For example, “Thank you for calling. An agent will be with you shortly.” It can be set as mandatory. If the mandatory option is not selected and a caller reaches the call queue while there is an available agent, the caller will not hear this announcement and is transferred to an agent. The welcome message feature is enabled by default.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-11-13T15:45:43.258095Z[Europe/Dublin]", comments = "Generator version: 7.9.0")
public class CallQueueQueueSettingsGetObjectWelcomeMessage {
  public static final String SERIALIZED_NAME_ENABLED = "enabled";
  @SerializedName(SERIALIZED_NAME_ENABLED)
  private Boolean enabled;

  public static final String SERIALIZED_NAME_ALWAYS_ENABLED = "alwaysEnabled";
  @SerializedName(SERIALIZED_NAME_ALWAYS_ENABLED)
  private Boolean alwaysEnabled;

  /**
   * Indicates how to handle new calls when the queue is full.
   */
  @JsonAdapter(GreetingEnum.Adapter.class)
  public enum GreetingEnum {
    CUSTOM("CUSTOM"),
    
    DEFAULT("DEFAULT");

    private String value;

    GreetingEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static GreetingEnum fromValue(String value) {
      for (GreetingEnum b : GreetingEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<GreetingEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final GreetingEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public GreetingEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return GreetingEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      GreetingEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_GREETING = "greeting";
  @SerializedName(SERIALIZED_NAME_GREETING)
  private GreetingEnum greeting;

  public static final String SERIALIZED_NAME_AUDIO_ANNOUNCEMENT_FILES = "audioAnnouncementFiles";
  @SerializedName(SERIALIZED_NAME_AUDIO_ANNOUNCEMENT_FILES)
  private List<Object> audioAnnouncementFiles = new ArrayList<>();

  public CallQueueQueueSettingsGetObjectWelcomeMessage() {
  }

  public CallQueueQueueSettingsGetObjectWelcomeMessage enabled(Boolean enabled) {
    this.enabled = enabled;
    return this;
  }

  /**
   * If enabled play entrance message. The default value is &#x60;true&#x60;.
   * @return enabled
   */
  @javax.annotation.Nullable
  public Boolean getEnabled() {
    return enabled;
  }

  public void setEnabled(Boolean enabled) {
    this.enabled = enabled;
  }


  public CallQueueQueueSettingsGetObjectWelcomeMessage alwaysEnabled(Boolean alwaysEnabled) {
    this.alwaysEnabled = alwaysEnabled;
    return this;
  }

  /**
   * Mandatory entrance message. The default value is &#x60;false&#x60;.
   * @return alwaysEnabled
   */
  @javax.annotation.Nullable
  public Boolean getAlwaysEnabled() {
    return alwaysEnabled;
  }

  public void setAlwaysEnabled(Boolean alwaysEnabled) {
    this.alwaysEnabled = alwaysEnabled;
  }


  public CallQueueQueueSettingsGetObjectWelcomeMessage greeting(GreetingEnum greeting) {
    this.greeting = greeting;
    return this;
  }

  /**
   * Indicates how to handle new calls when the queue is full.
   * @return greeting
   */
  @javax.annotation.Nonnull
  public GreetingEnum getGreeting() {
    return greeting;
  }

  public void setGreeting(GreetingEnum greeting) {
    this.greeting = greeting;
  }


  public CallQueueQueueSettingsGetObjectWelcomeMessage audioAnnouncementFiles(List<Object> audioAnnouncementFiles) {
    this.audioAnnouncementFiles = audioAnnouncementFiles;
    return this;
  }

  public CallQueueQueueSettingsGetObjectWelcomeMessage addAudioAnnouncementFilesItem(Object audioAnnouncementFilesItem) {
    if (this.audioAnnouncementFiles == null) {
      this.audioAnnouncementFiles = new ArrayList<>();
    }
    this.audioAnnouncementFiles.add(audioAnnouncementFilesItem);
    return this;
  }

  /**
   * Array of announcement files to be played as &#x60;welcomeMessage&#x60; greetings. These files are from the list of announcement files associated with this call queue. For &#x60;CUSTOM&#x60; announcement, a minimum of 1 file is mandatory, and the maximum is 4.
   * @return audioAnnouncementFiles
   */
  @javax.annotation.Nullable
  public List<Object> getAudioAnnouncementFiles() {
    return audioAnnouncementFiles;
  }

  public void setAudioAnnouncementFiles(List<Object> audioAnnouncementFiles) {
    this.audioAnnouncementFiles = audioAnnouncementFiles;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CallQueueQueueSettingsGetObjectWelcomeMessage callQueueQueueSettingsGetObjectWelcomeMessage = (CallQueueQueueSettingsGetObjectWelcomeMessage) o;
    return Objects.equals(this.enabled, callQueueQueueSettingsGetObjectWelcomeMessage.enabled) &&
        Objects.equals(this.alwaysEnabled, callQueueQueueSettingsGetObjectWelcomeMessage.alwaysEnabled) &&
        Objects.equals(this.greeting, callQueueQueueSettingsGetObjectWelcomeMessage.greeting) &&
        Objects.equals(this.audioAnnouncementFiles, callQueueQueueSettingsGetObjectWelcomeMessage.audioAnnouncementFiles);
  }

  @Override
  public int hashCode() {
    return Objects.hash(enabled, alwaysEnabled, greeting, audioAnnouncementFiles);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CallQueueQueueSettingsGetObjectWelcomeMessage {\n");
    sb.append("    enabled: ").append(toIndentedString(enabled)).append("\n");
    sb.append("    alwaysEnabled: ").append(toIndentedString(alwaysEnabled)).append("\n");
    sb.append("    greeting: ").append(toIndentedString(greeting)).append("\n");
    sb.append("    audioAnnouncementFiles: ").append(toIndentedString(audioAnnouncementFiles)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("enabled");
    openapiFields.add("alwaysEnabled");
    openapiFields.add("greeting");
    openapiFields.add("audioAnnouncementFiles");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("greeting");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to CallQueueQueueSettingsGetObjectWelcomeMessage
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!CallQueueQueueSettingsGetObjectWelcomeMessage.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in CallQueueQueueSettingsGetObjectWelcomeMessage is not found in the empty JSON string", CallQueueQueueSettingsGetObjectWelcomeMessage.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!CallQueueQueueSettingsGetObjectWelcomeMessage.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `CallQueueQueueSettingsGetObjectWelcomeMessage` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : CallQueueQueueSettingsGetObjectWelcomeMessage.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if (!jsonObj.get("greeting").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `greeting` to be a primitive type in the JSON string but got `%s`", jsonObj.get("greeting").toString()));
      }
      // validate the required field `greeting`
      GreetingEnum.validateJsonElement(jsonObj.get("greeting"));
      // ensure the optional json data is an array if present
      if (jsonObj.get("audioAnnouncementFiles") != null && !jsonObj.get("audioAnnouncementFiles").isJsonNull() && !jsonObj.get("audioAnnouncementFiles").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `audioAnnouncementFiles` to be an array in the JSON string but got `%s`", jsonObj.get("audioAnnouncementFiles").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!CallQueueQueueSettingsGetObjectWelcomeMessage.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'CallQueueQueueSettingsGetObjectWelcomeMessage' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<CallQueueQueueSettingsGetObjectWelcomeMessage> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(CallQueueQueueSettingsGetObjectWelcomeMessage.class));

       return (TypeAdapter<T>) new TypeAdapter<CallQueueQueueSettingsGetObjectWelcomeMessage>() {
           @Override
           public void write(JsonWriter out, CallQueueQueueSettingsGetObjectWelcomeMessage value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public CallQueueQueueSettingsGetObjectWelcomeMessage read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of CallQueueQueueSettingsGetObjectWelcomeMessage given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of CallQueueQueueSettingsGetObjectWelcomeMessage
   * @throws IOException if the JSON string is invalid with respect to CallQueueQueueSettingsGetObjectWelcomeMessage
   */
  public static CallQueueQueueSettingsGetObjectWelcomeMessage fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, CallQueueQueueSettingsGetObjectWelcomeMessage.class);
  }

  /**
   * Convert an instance of CallQueueQueueSettingsGetObjectWelcomeMessage to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

