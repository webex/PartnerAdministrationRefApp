// Copyright 2025 Cisco Systems Inc.
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in
// all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
// THE SOFTWARE.

/*
 * All Webex calling API
 * Webex calling API specifications
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * GetPagingGroupObject
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-11-13T15:45:43.258095Z[Europe/Dublin]", comments = "Generator version: 7.9.0")
public class GetPagingGroupObject {
  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_ENABLED = "enabled";
  @SerializedName(SERIALIZED_NAME_ENABLED)
  private Boolean enabled;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_PHONE_NUMBER = "phoneNumber";
  @SerializedName(SERIALIZED_NAME_PHONE_NUMBER)
  private String phoneNumber;

  public static final String SERIALIZED_NAME_EXTENSION = "extension";
  @SerializedName(SERIALIZED_NAME_EXTENSION)
  private String extension;

  public static final String SERIALIZED_NAME_TOLL_FREE_NUMBER = "tollFreeNumber";
  @SerializedName(SERIALIZED_NAME_TOLL_FREE_NUMBER)
  private Boolean tollFreeNumber;

  public static final String SERIALIZED_NAME_LANGUAGE = "language";
  @SerializedName(SERIALIZED_NAME_LANGUAGE)
  private String language;

  public static final String SERIALIZED_NAME_LANGUAGE_CODE = "languageCode";
  @SerializedName(SERIALIZED_NAME_LANGUAGE_CODE)
  private String languageCode;

  public static final String SERIALIZED_NAME_FIRST_NAME = "firstName";
  @SerializedName(SERIALIZED_NAME_FIRST_NAME)
  private String firstName;

  public static final String SERIALIZED_NAME_LAST_NAME = "lastName";
  @SerializedName(SERIALIZED_NAME_LAST_NAME)
  private String lastName;

  public static final String SERIALIZED_NAME_ORIGINATOR_CALLER_ID_ENABLED = "originatorCallerIdEnabled";
  @SerializedName(SERIALIZED_NAME_ORIGINATOR_CALLER_ID_ENABLED)
  private Boolean originatorCallerIdEnabled;

  public static final String SERIALIZED_NAME_ORIGINATORS = "originators";
  @SerializedName(SERIALIZED_NAME_ORIGINATORS)
  private List<Object> originators = new ArrayList<>();

  public static final String SERIALIZED_NAME_TARGETS = "targets";
  @SerializedName(SERIALIZED_NAME_TARGETS)
  private List<Object> targets = new ArrayList<>();

  public GetPagingGroupObject() {
  }

  public GetPagingGroupObject id(String id) {
    this.id = id;
    return this;
  }

  /**
   * A unique identifier for the paging group.
   * @return id
   */
  @javax.annotation.Nonnull
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }


  public GetPagingGroupObject enabled(Boolean enabled) {
    this.enabled = enabled;
    return this;
  }

  /**
   * Whether or not the paging group is enabled.
   * @return enabled
   */
  @javax.annotation.Nonnull
  public Boolean getEnabled() {
    return enabled;
  }

  public void setEnabled(Boolean enabled) {
    this.enabled = enabled;
  }


  public GetPagingGroupObject name(String name) {
    this.name = name;
    return this;
  }

  /**
   * Unique name for the paging group. Minimum length is 1. Maximum length is 30.
   * @return name
   */
  @javax.annotation.Nonnull
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }


  public GetPagingGroupObject phoneNumber(String phoneNumber) {
    this.phoneNumber = phoneNumber;
    return this;
  }

  /**
   * Paging group phone number. Minimum length is 1. Maximum length is 23. Either &#x60;phoneNumber&#x60; or &#x60;extension&#x60; is mandatory.
   * @return phoneNumber
   */
  @javax.annotation.Nullable
  public String getPhoneNumber() {
    return phoneNumber;
  }

  public void setPhoneNumber(String phoneNumber) {
    this.phoneNumber = phoneNumber;
  }


  public GetPagingGroupObject extension(String extension) {
    this.extension = extension;
    return this;
  }

  /**
   * Paging group extension. Minimum length is 2. Maximum length is 10. Either &#x60;phoneNumber&#x60; or &#x60;extension&#x60; is mandatory.
   * @return extension
   */
  @javax.annotation.Nullable
  public String getExtension() {
    return extension;
  }

  public void setExtension(String extension) {
    this.extension = extension;
  }


  public GetPagingGroupObject tollFreeNumber(Boolean tollFreeNumber) {
    this.tollFreeNumber = tollFreeNumber;
    return this;
  }

  /**
   * Flag to indicate toll free number.
   * @return tollFreeNumber
   */
  @javax.annotation.Nullable
  public Boolean getTollFreeNumber() {
    return tollFreeNumber;
  }

  public void setTollFreeNumber(Boolean tollFreeNumber) {
    this.tollFreeNumber = tollFreeNumber;
  }


  public GetPagingGroupObject language(String language) {
    this.language = language;
    return this;
  }

  /**
   * Paging language. Minimum length is 1. Maximum length is 40.
   * @return language
   */
  @javax.annotation.Nonnull
  public String getLanguage() {
    return language;
  }

  public void setLanguage(String language) {
    this.language = language;
  }


  public GetPagingGroupObject languageCode(String languageCode) {
    this.languageCode = languageCode;
    return this;
  }

  /**
   * Language code.
   * @return languageCode
   */
  @javax.annotation.Nonnull
  public String getLanguageCode() {
    return languageCode;
  }

  public void setLanguageCode(String languageCode) {
    this.languageCode = languageCode;
  }


  public GetPagingGroupObject firstName(String firstName) {
    this.firstName = firstName;
    return this;
  }

  /**
   * First name that displays when a group page is performed. Minimum length is 1. Maximum length is 64.
   * @return firstName
   */
  @javax.annotation.Nonnull
  public String getFirstName() {
    return firstName;
  }

  public void setFirstName(String firstName) {
    this.firstName = firstName;
  }


  public GetPagingGroupObject lastName(String lastName) {
    this.lastName = lastName;
    return this;
  }

  /**
   * Last name that displays when a group page is performed. Minimum length is 1. Maximum length is 64.
   * @return lastName
   */
  @javax.annotation.Nonnull
  public String getLastName() {
    return lastName;
  }

  public void setLastName(String lastName) {
    this.lastName = lastName;
  }


  public GetPagingGroupObject originatorCallerIdEnabled(Boolean originatorCallerIdEnabled) {
    this.originatorCallerIdEnabled = originatorCallerIdEnabled;
    return this;
  }

  /**
   * Determines what is shown on target users caller ID when a group page is performed. If true shows page originator ID.
   * @return originatorCallerIdEnabled
   */
  @javax.annotation.Nonnull
  public Boolean getOriginatorCallerIdEnabled() {
    return originatorCallerIdEnabled;
  }

  public void setOriginatorCallerIdEnabled(Boolean originatorCallerIdEnabled) {
    this.originatorCallerIdEnabled = originatorCallerIdEnabled;
  }


  public GetPagingGroupObject originators(List<Object> originators) {
    this.originators = originators;
    return this;
  }

  public GetPagingGroupObject addOriginatorsItem(Object originatorsItem) {
    if (this.originators == null) {
      this.originators = new ArrayList<>();
    }
    this.originators.add(originatorsItem);
    return this;
  }

  /**
   * An array of people, workspaces and virtual lines ID&#39;s who may originate pages to this paging group.
   * @return originators
   */
  @javax.annotation.Nullable
  public List<Object> getOriginators() {
    return originators;
  }

  public void setOriginators(List<Object> originators) {
    this.originators = originators;
  }


  public GetPagingGroupObject targets(List<Object> targets) {
    this.targets = targets;
    return this;
  }

  public GetPagingGroupObject addTargetsItem(Object targetsItem) {
    if (this.targets == null) {
      this.targets = new ArrayList<>();
    }
    this.targets.add(targetsItem);
    return this;
  }

  /**
   * An array of people, workspaces and virtual lines ID&#39;s that are added to paging group as paging call targets.
   * @return targets
   */
  @javax.annotation.Nullable
  public List<Object> getTargets() {
    return targets;
  }

  public void setTargets(List<Object> targets) {
    this.targets = targets;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GetPagingGroupObject getPagingGroupObject = (GetPagingGroupObject) o;
    return Objects.equals(this.id, getPagingGroupObject.id) &&
        Objects.equals(this.enabled, getPagingGroupObject.enabled) &&
        Objects.equals(this.name, getPagingGroupObject.name) &&
        Objects.equals(this.phoneNumber, getPagingGroupObject.phoneNumber) &&
        Objects.equals(this.extension, getPagingGroupObject.extension) &&
        Objects.equals(this.tollFreeNumber, getPagingGroupObject.tollFreeNumber) &&
        Objects.equals(this.language, getPagingGroupObject.language) &&
        Objects.equals(this.languageCode, getPagingGroupObject.languageCode) &&
        Objects.equals(this.firstName, getPagingGroupObject.firstName) &&
        Objects.equals(this.lastName, getPagingGroupObject.lastName) &&
        Objects.equals(this.originatorCallerIdEnabled, getPagingGroupObject.originatorCallerIdEnabled) &&
        Objects.equals(this.originators, getPagingGroupObject.originators) &&
        Objects.equals(this.targets, getPagingGroupObject.targets);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, enabled, name, phoneNumber, extension, tollFreeNumber, language, languageCode, firstName, lastName, originatorCallerIdEnabled, originators, targets);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GetPagingGroupObject {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    enabled: ").append(toIndentedString(enabled)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    phoneNumber: ").append(toIndentedString(phoneNumber)).append("\n");
    sb.append("    extension: ").append(toIndentedString(extension)).append("\n");
    sb.append("    tollFreeNumber: ").append(toIndentedString(tollFreeNumber)).append("\n");
    sb.append("    language: ").append(toIndentedString(language)).append("\n");
    sb.append("    languageCode: ").append(toIndentedString(languageCode)).append("\n");
    sb.append("    firstName: ").append(toIndentedString(firstName)).append("\n");
    sb.append("    lastName: ").append(toIndentedString(lastName)).append("\n");
    sb.append("    originatorCallerIdEnabled: ").append(toIndentedString(originatorCallerIdEnabled)).append("\n");
    sb.append("    originators: ").append(toIndentedString(originators)).append("\n");
    sb.append("    targets: ").append(toIndentedString(targets)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("id");
    openapiFields.add("enabled");
    openapiFields.add("name");
    openapiFields.add("phoneNumber");
    openapiFields.add("extension");
    openapiFields.add("tollFreeNumber");
    openapiFields.add("language");
    openapiFields.add("languageCode");
    openapiFields.add("firstName");
    openapiFields.add("lastName");
    openapiFields.add("originatorCallerIdEnabled");
    openapiFields.add("originators");
    openapiFields.add("targets");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("id");
    openapiRequiredFields.add("enabled");
    openapiRequiredFields.add("name");
    openapiRequiredFields.add("language");
    openapiRequiredFields.add("languageCode");
    openapiRequiredFields.add("firstName");
    openapiRequiredFields.add("lastName");
    openapiRequiredFields.add("originatorCallerIdEnabled");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GetPagingGroupObject
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GetPagingGroupObject.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GetPagingGroupObject is not found in the empty JSON string", GetPagingGroupObject.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GetPagingGroupObject.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GetPagingGroupObject` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : GetPagingGroupObject.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if (!jsonObj.get("id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("id").toString()));
      }
      if (!jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      if ((jsonObj.get("phoneNumber") != null && !jsonObj.get("phoneNumber").isJsonNull()) && !jsonObj.get("phoneNumber").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `phoneNumber` to be a primitive type in the JSON string but got `%s`", jsonObj.get("phoneNumber").toString()));
      }
      if ((jsonObj.get("extension") != null && !jsonObj.get("extension").isJsonNull()) && !jsonObj.get("extension").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `extension` to be a primitive type in the JSON string but got `%s`", jsonObj.get("extension").toString()));
      }
      if (!jsonObj.get("language").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `language` to be a primitive type in the JSON string but got `%s`", jsonObj.get("language").toString()));
      }
      if (!jsonObj.get("languageCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `languageCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("languageCode").toString()));
      }
      if (!jsonObj.get("firstName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `firstName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("firstName").toString()));
      }
      if (!jsonObj.get("lastName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `lastName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("lastName").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("originators") != null && !jsonObj.get("originators").isJsonNull() && !jsonObj.get("originators").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `originators` to be an array in the JSON string but got `%s`", jsonObj.get("originators").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("targets") != null && !jsonObj.get("targets").isJsonNull() && !jsonObj.get("targets").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `targets` to be an array in the JSON string but got `%s`", jsonObj.get("targets").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GetPagingGroupObject.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GetPagingGroupObject' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GetPagingGroupObject> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GetPagingGroupObject.class));

       return (TypeAdapter<T>) new TypeAdapter<GetPagingGroupObject>() {
           @Override
           public void write(JsonWriter out, GetPagingGroupObject value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GetPagingGroupObject read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GetPagingGroupObject given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GetPagingGroupObject
   * @throws IOException if the JSON string is invalid with respect to GetPagingGroupObject
   */
  public static GetPagingGroupObject fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GetPagingGroupObject.class);
  }

  /**
   * Convert an instance of GetPagingGroupObject to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

