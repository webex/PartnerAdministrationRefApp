// Copyright 2025 Cisco Systems Inc.
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in
// all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
// THE SOFTWARE.

/*
 * All Webex calling API
 * Webex calling API specifications
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.VoicemailInfoEmailCopyOfMessage;
import org.openapitools.client.model.VoicemailInfoFaxMessage;
import org.openapitools.client.model.VoicemailInfoMessageStorage;
import org.openapitools.client.model.VoicemailInfoNotifications;
import org.openapitools.client.model.VoicemailInfoSendAllCalls;
import org.openapitools.client.model.VoicemailInfoSendBusyCalls;
import org.openapitools.client.model.VoicemailInfoSendUnansweredCalls;
import org.openapitools.client.model.VoicemailInfoTransferToNumber;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * VoicemailInfo
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-11-13T15:45:43.258095Z[Europe/Dublin]", comments = "Generator version: 7.9.0")
public class VoicemailInfo {
  public static final String SERIALIZED_NAME_ENABLED = "enabled";
  @SerializedName(SERIALIZED_NAME_ENABLED)
  private Boolean enabled;

  public static final String SERIALIZED_NAME_SEND_ALL_CALLS = "sendAllCalls";
  @SerializedName(SERIALIZED_NAME_SEND_ALL_CALLS)
  private VoicemailInfoSendAllCalls sendAllCalls;

  public static final String SERIALIZED_NAME_SEND_BUSY_CALLS = "sendBusyCalls";
  @SerializedName(SERIALIZED_NAME_SEND_BUSY_CALLS)
  private VoicemailInfoSendBusyCalls sendBusyCalls;

  public static final String SERIALIZED_NAME_SEND_UNANSWERED_CALLS = "sendUnansweredCalls";
  @SerializedName(SERIALIZED_NAME_SEND_UNANSWERED_CALLS)
  private VoicemailInfoSendUnansweredCalls sendUnansweredCalls;

  public static final String SERIALIZED_NAME_NOTIFICATIONS = "notifications";
  @SerializedName(SERIALIZED_NAME_NOTIFICATIONS)
  private VoicemailInfoNotifications notifications;

  public static final String SERIALIZED_NAME_TRANSFER_TO_NUMBER = "transferToNumber";
  @SerializedName(SERIALIZED_NAME_TRANSFER_TO_NUMBER)
  private VoicemailInfoTransferToNumber transferToNumber;

  public static final String SERIALIZED_NAME_EMAIL_COPY_OF_MESSAGE = "emailCopyOfMessage";
  @SerializedName(SERIALIZED_NAME_EMAIL_COPY_OF_MESSAGE)
  private VoicemailInfoEmailCopyOfMessage emailCopyOfMessage;

  public static final String SERIALIZED_NAME_MESSAGE_STORAGE = "messageStorage";
  @SerializedName(SERIALIZED_NAME_MESSAGE_STORAGE)
  private VoicemailInfoMessageStorage messageStorage;

  public static final String SERIALIZED_NAME_FAX_MESSAGE = "faxMessage";
  @SerializedName(SERIALIZED_NAME_FAX_MESSAGE)
  private VoicemailInfoFaxMessage faxMessage;

  public VoicemailInfo() {
  }

  public VoicemailInfo enabled(Boolean enabled) {
    this.enabled = enabled;
    return this;
  }

  /**
   * Voicemail is enabled or disabled.
   * @return enabled
   */
  @javax.annotation.Nonnull
  public Boolean getEnabled() {
    return enabled;
  }

  public void setEnabled(Boolean enabled) {
    this.enabled = enabled;
  }


  public VoicemailInfo sendAllCalls(VoicemailInfoSendAllCalls sendAllCalls) {
    this.sendAllCalls = sendAllCalls;
    return this;
  }

  /**
   * Get sendAllCalls
   * @return sendAllCalls
   */
  @javax.annotation.Nonnull
  public VoicemailInfoSendAllCalls getSendAllCalls() {
    return sendAllCalls;
  }

  public void setSendAllCalls(VoicemailInfoSendAllCalls sendAllCalls) {
    this.sendAllCalls = sendAllCalls;
  }


  public VoicemailInfo sendBusyCalls(VoicemailInfoSendBusyCalls sendBusyCalls) {
    this.sendBusyCalls = sendBusyCalls;
    return this;
  }

  /**
   * Get sendBusyCalls
   * @return sendBusyCalls
   */
  @javax.annotation.Nonnull
  public VoicemailInfoSendBusyCalls getSendBusyCalls() {
    return sendBusyCalls;
  }

  public void setSendBusyCalls(VoicemailInfoSendBusyCalls sendBusyCalls) {
    this.sendBusyCalls = sendBusyCalls;
  }


  public VoicemailInfo sendUnansweredCalls(VoicemailInfoSendUnansweredCalls sendUnansweredCalls) {
    this.sendUnansweredCalls = sendUnansweredCalls;
    return this;
  }

  /**
   * Get sendUnansweredCalls
   * @return sendUnansweredCalls
   */
  @javax.annotation.Nonnull
  public VoicemailInfoSendUnansweredCalls getSendUnansweredCalls() {
    return sendUnansweredCalls;
  }

  public void setSendUnansweredCalls(VoicemailInfoSendUnansweredCalls sendUnansweredCalls) {
    this.sendUnansweredCalls = sendUnansweredCalls;
  }


  public VoicemailInfo notifications(VoicemailInfoNotifications notifications) {
    this.notifications = notifications;
    return this;
  }

  /**
   * Get notifications
   * @return notifications
   */
  @javax.annotation.Nonnull
  public VoicemailInfoNotifications getNotifications() {
    return notifications;
  }

  public void setNotifications(VoicemailInfoNotifications notifications) {
    this.notifications = notifications;
  }


  public VoicemailInfo transferToNumber(VoicemailInfoTransferToNumber transferToNumber) {
    this.transferToNumber = transferToNumber;
    return this;
  }

  /**
   * Get transferToNumber
   * @return transferToNumber
   */
  @javax.annotation.Nonnull
  public VoicemailInfoTransferToNumber getTransferToNumber() {
    return transferToNumber;
  }

  public void setTransferToNumber(VoicemailInfoTransferToNumber transferToNumber) {
    this.transferToNumber = transferToNumber;
  }


  public VoicemailInfo emailCopyOfMessage(VoicemailInfoEmailCopyOfMessage emailCopyOfMessage) {
    this.emailCopyOfMessage = emailCopyOfMessage;
    return this;
  }

  /**
   * Get emailCopyOfMessage
   * @return emailCopyOfMessage
   */
  @javax.annotation.Nonnull
  public VoicemailInfoEmailCopyOfMessage getEmailCopyOfMessage() {
    return emailCopyOfMessage;
  }

  public void setEmailCopyOfMessage(VoicemailInfoEmailCopyOfMessage emailCopyOfMessage) {
    this.emailCopyOfMessage = emailCopyOfMessage;
  }


  public VoicemailInfo messageStorage(VoicemailInfoMessageStorage messageStorage) {
    this.messageStorage = messageStorage;
    return this;
  }

  /**
   * Get messageStorage
   * @return messageStorage
   */
  @javax.annotation.Nonnull
  public VoicemailInfoMessageStorage getMessageStorage() {
    return messageStorage;
  }

  public void setMessageStorage(VoicemailInfoMessageStorage messageStorage) {
    this.messageStorage = messageStorage;
  }


  public VoicemailInfo faxMessage(VoicemailInfoFaxMessage faxMessage) {
    this.faxMessage = faxMessage;
    return this;
  }

  /**
   * Get faxMessage
   * @return faxMessage
   */
  @javax.annotation.Nonnull
  public VoicemailInfoFaxMessage getFaxMessage() {
    return faxMessage;
  }

  public void setFaxMessage(VoicemailInfoFaxMessage faxMessage) {
    this.faxMessage = faxMessage;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    VoicemailInfo voicemailInfo = (VoicemailInfo) o;
    return Objects.equals(this.enabled, voicemailInfo.enabled) &&
        Objects.equals(this.sendAllCalls, voicemailInfo.sendAllCalls) &&
        Objects.equals(this.sendBusyCalls, voicemailInfo.sendBusyCalls) &&
        Objects.equals(this.sendUnansweredCalls, voicemailInfo.sendUnansweredCalls) &&
        Objects.equals(this.notifications, voicemailInfo.notifications) &&
        Objects.equals(this.transferToNumber, voicemailInfo.transferToNumber) &&
        Objects.equals(this.emailCopyOfMessage, voicemailInfo.emailCopyOfMessage) &&
        Objects.equals(this.messageStorage, voicemailInfo.messageStorage) &&
        Objects.equals(this.faxMessage, voicemailInfo.faxMessage);
  }

  @Override
  public int hashCode() {
    return Objects.hash(enabled, sendAllCalls, sendBusyCalls, sendUnansweredCalls, notifications, transferToNumber, emailCopyOfMessage, messageStorage, faxMessage);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class VoicemailInfo {\n");
    sb.append("    enabled: ").append(toIndentedString(enabled)).append("\n");
    sb.append("    sendAllCalls: ").append(toIndentedString(sendAllCalls)).append("\n");
    sb.append("    sendBusyCalls: ").append(toIndentedString(sendBusyCalls)).append("\n");
    sb.append("    sendUnansweredCalls: ").append(toIndentedString(sendUnansweredCalls)).append("\n");
    sb.append("    notifications: ").append(toIndentedString(notifications)).append("\n");
    sb.append("    transferToNumber: ").append(toIndentedString(transferToNumber)).append("\n");
    sb.append("    emailCopyOfMessage: ").append(toIndentedString(emailCopyOfMessage)).append("\n");
    sb.append("    messageStorage: ").append(toIndentedString(messageStorage)).append("\n");
    sb.append("    faxMessage: ").append(toIndentedString(faxMessage)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("enabled");
    openapiFields.add("sendAllCalls");
    openapiFields.add("sendBusyCalls");
    openapiFields.add("sendUnansweredCalls");
    openapiFields.add("notifications");
    openapiFields.add("transferToNumber");
    openapiFields.add("emailCopyOfMessage");
    openapiFields.add("messageStorage");
    openapiFields.add("faxMessage");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("enabled");
    openapiRequiredFields.add("sendAllCalls");
    openapiRequiredFields.add("sendBusyCalls");
    openapiRequiredFields.add("sendUnansweredCalls");
    openapiRequiredFields.add("notifications");
    openapiRequiredFields.add("transferToNumber");
    openapiRequiredFields.add("emailCopyOfMessage");
    openapiRequiredFields.add("messageStorage");
    openapiRequiredFields.add("faxMessage");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to VoicemailInfo
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!VoicemailInfo.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in VoicemailInfo is not found in the empty JSON string", VoicemailInfo.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!VoicemailInfo.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `VoicemailInfo` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : VoicemailInfo.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the required field `sendAllCalls`
      VoicemailInfoSendAllCalls.validateJsonElement(jsonObj.get("sendAllCalls"));
      // validate the required field `sendBusyCalls`
      VoicemailInfoSendBusyCalls.validateJsonElement(jsonObj.get("sendBusyCalls"));
      // validate the required field `sendUnansweredCalls`
      VoicemailInfoSendUnansweredCalls.validateJsonElement(jsonObj.get("sendUnansweredCalls"));
      // validate the required field `notifications`
      VoicemailInfoNotifications.validateJsonElement(jsonObj.get("notifications"));
      // validate the required field `transferToNumber`
      VoicemailInfoTransferToNumber.validateJsonElement(jsonObj.get("transferToNumber"));
      // validate the required field `emailCopyOfMessage`
      VoicemailInfoEmailCopyOfMessage.validateJsonElement(jsonObj.get("emailCopyOfMessage"));
      // validate the required field `messageStorage`
      VoicemailInfoMessageStorage.validateJsonElement(jsonObj.get("messageStorage"));
      // validate the required field `faxMessage`
      VoicemailInfoFaxMessage.validateJsonElement(jsonObj.get("faxMessage"));
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!VoicemailInfo.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'VoicemailInfo' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<VoicemailInfo> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(VoicemailInfo.class));

       return (TypeAdapter<T>) new TypeAdapter<VoicemailInfo>() {
           @Override
           public void write(JsonWriter out, VoicemailInfo value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public VoicemailInfo read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of VoicemailInfo given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of VoicemailInfo
   * @throws IOException if the JSON string is invalid with respect to VoicemailInfo
   */
  public static VoicemailInfo fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, VoicemailInfo.class);
  }

  /**
   * Convert an instance of VoicemailInfo to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

