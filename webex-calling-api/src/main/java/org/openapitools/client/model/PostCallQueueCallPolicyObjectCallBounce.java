// Copyright 2025 Cisco Systems Inc.
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in
// all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
// THE SOFTWARE.

/*
 * All Webex calling API
 * Webex calling API specifications
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Settings for when the call into the hunt group is not answered.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-11-13T15:45:43.258095Z[Europe/Dublin]", comments = "Generator version: 7.9.0")
public class PostCallQueueCallPolicyObjectCallBounce {
  public static final String SERIALIZED_NAME_CALL_BOUNCE_ENABLED = "callBounceEnabled";
  @SerializedName(SERIALIZED_NAME_CALL_BOUNCE_ENABLED)
  private Boolean callBounceEnabled;

  public static final String SERIALIZED_NAME_CALL_BOUNCE_MAX_RINGS = "callBounceMaxRings";
  @SerializedName(SERIALIZED_NAME_CALL_BOUNCE_MAX_RINGS)
  private BigDecimal callBounceMaxRings;

  public static final String SERIALIZED_NAME_AGENT_UNAVAILABLE_ENABLED = "agentUnavailableEnabled";
  @SerializedName(SERIALIZED_NAME_AGENT_UNAVAILABLE_ENABLED)
  private Boolean agentUnavailableEnabled;

  public static final String SERIALIZED_NAME_ALERT_AGENT_ENABLED = "alertAgentEnabled";
  @SerializedName(SERIALIZED_NAME_ALERT_AGENT_ENABLED)
  private Boolean alertAgentEnabled;

  public static final String SERIALIZED_NAME_ALERT_AGENT_MAX_SECONDS = "alertAgentMaxSeconds";
  @SerializedName(SERIALIZED_NAME_ALERT_AGENT_MAX_SECONDS)
  private BigDecimal alertAgentMaxSeconds;

  public static final String SERIALIZED_NAME_CALL_BOUNCE_ON_HOLD_ENABLED = "callBounceOnHoldEnabled";
  @SerializedName(SERIALIZED_NAME_CALL_BOUNCE_ON_HOLD_ENABLED)
  private Boolean callBounceOnHoldEnabled;

  public static final String SERIALIZED_NAME_CALL_BOUNCE_ON_HOLD_MAX_SECONDS = "callBounceOnHoldMaxSeconds";
  @SerializedName(SERIALIZED_NAME_CALL_BOUNCE_ON_HOLD_MAX_SECONDS)
  private BigDecimal callBounceOnHoldMaxSeconds;

  public PostCallQueueCallPolicyObjectCallBounce() {
  }

  public PostCallQueueCallPolicyObjectCallBounce callBounceEnabled(Boolean callBounceEnabled) {
    this.callBounceEnabled = callBounceEnabled;
    return this;
  }

  /**
   * If enabled, bounce calls after the set number of rings.
   * @return callBounceEnabled
   */
  @javax.annotation.Nullable
  public Boolean getCallBounceEnabled() {
    return callBounceEnabled;
  }

  public void setCallBounceEnabled(Boolean callBounceEnabled) {
    this.callBounceEnabled = callBounceEnabled;
  }


  public PostCallQueueCallPolicyObjectCallBounce callBounceMaxRings(BigDecimal callBounceMaxRings) {
    this.callBounceMaxRings = callBounceMaxRings;
    return this;
  }

  /**
   * Number of rings after which to bounce call, if &#x60;callBounce&#x60; is enabled.
   * @return callBounceMaxRings
   */
  @javax.annotation.Nullable
  public BigDecimal getCallBounceMaxRings() {
    return callBounceMaxRings;
  }

  public void setCallBounceMaxRings(BigDecimal callBounceMaxRings) {
    this.callBounceMaxRings = callBounceMaxRings;
  }


  public PostCallQueueCallPolicyObjectCallBounce agentUnavailableEnabled(Boolean agentUnavailableEnabled) {
    this.agentUnavailableEnabled = agentUnavailableEnabled;
    return this;
  }

  /**
   * Bounce if agent becomes unavailable.
   * @return agentUnavailableEnabled
   */
  @javax.annotation.Nullable
  public Boolean getAgentUnavailableEnabled() {
    return agentUnavailableEnabled;
  }

  public void setAgentUnavailableEnabled(Boolean agentUnavailableEnabled) {
    this.agentUnavailableEnabled = agentUnavailableEnabled;
  }


  public PostCallQueueCallPolicyObjectCallBounce alertAgentEnabled(Boolean alertAgentEnabled) {
    this.alertAgentEnabled = alertAgentEnabled;
    return this;
  }

  /**
   * Alert agent if call on hold more than &#x60;alertAgentMaxSeconds&#x60;.
   * @return alertAgentEnabled
   */
  @javax.annotation.Nullable
  public Boolean getAlertAgentEnabled() {
    return alertAgentEnabled;
  }

  public void setAlertAgentEnabled(Boolean alertAgentEnabled) {
    this.alertAgentEnabled = alertAgentEnabled;
  }


  public PostCallQueueCallPolicyObjectCallBounce alertAgentMaxSeconds(BigDecimal alertAgentMaxSeconds) {
    this.alertAgentMaxSeconds = alertAgentMaxSeconds;
    return this;
  }

  /**
   * Number of second after which to alert agent if &#x60;alertAgentEnabled&#x60;.
   * @return alertAgentMaxSeconds
   */
  @javax.annotation.Nullable
  public BigDecimal getAlertAgentMaxSeconds() {
    return alertAgentMaxSeconds;
  }

  public void setAlertAgentMaxSeconds(BigDecimal alertAgentMaxSeconds) {
    this.alertAgentMaxSeconds = alertAgentMaxSeconds;
  }


  public PostCallQueueCallPolicyObjectCallBounce callBounceOnHoldEnabled(Boolean callBounceOnHoldEnabled) {
    this.callBounceOnHoldEnabled = callBounceOnHoldEnabled;
    return this;
  }

  /**
   * Bounce if call on hold more than &#x60;callBounceMaxSeconds&#x60;.
   * @return callBounceOnHoldEnabled
   */
  @javax.annotation.Nullable
  public Boolean getCallBounceOnHoldEnabled() {
    return callBounceOnHoldEnabled;
  }

  public void setCallBounceOnHoldEnabled(Boolean callBounceOnHoldEnabled) {
    this.callBounceOnHoldEnabled = callBounceOnHoldEnabled;
  }


  public PostCallQueueCallPolicyObjectCallBounce callBounceOnHoldMaxSeconds(BigDecimal callBounceOnHoldMaxSeconds) {
    this.callBounceOnHoldMaxSeconds = callBounceOnHoldMaxSeconds;
    return this;
  }

  /**
   * Number of second after which to bounce if &#x60;callBounceEnabled&#x60;.
   * @return callBounceOnHoldMaxSeconds
   */
  @javax.annotation.Nullable
  public BigDecimal getCallBounceOnHoldMaxSeconds() {
    return callBounceOnHoldMaxSeconds;
  }

  public void setCallBounceOnHoldMaxSeconds(BigDecimal callBounceOnHoldMaxSeconds) {
    this.callBounceOnHoldMaxSeconds = callBounceOnHoldMaxSeconds;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PostCallQueueCallPolicyObjectCallBounce postCallQueueCallPolicyObjectCallBounce = (PostCallQueueCallPolicyObjectCallBounce) o;
    return Objects.equals(this.callBounceEnabled, postCallQueueCallPolicyObjectCallBounce.callBounceEnabled) &&
        Objects.equals(this.callBounceMaxRings, postCallQueueCallPolicyObjectCallBounce.callBounceMaxRings) &&
        Objects.equals(this.agentUnavailableEnabled, postCallQueueCallPolicyObjectCallBounce.agentUnavailableEnabled) &&
        Objects.equals(this.alertAgentEnabled, postCallQueueCallPolicyObjectCallBounce.alertAgentEnabled) &&
        Objects.equals(this.alertAgentMaxSeconds, postCallQueueCallPolicyObjectCallBounce.alertAgentMaxSeconds) &&
        Objects.equals(this.callBounceOnHoldEnabled, postCallQueueCallPolicyObjectCallBounce.callBounceOnHoldEnabled) &&
        Objects.equals(this.callBounceOnHoldMaxSeconds, postCallQueueCallPolicyObjectCallBounce.callBounceOnHoldMaxSeconds);
  }

  @Override
  public int hashCode() {
    return Objects.hash(callBounceEnabled, callBounceMaxRings, agentUnavailableEnabled, alertAgentEnabled, alertAgentMaxSeconds, callBounceOnHoldEnabled, callBounceOnHoldMaxSeconds);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PostCallQueueCallPolicyObjectCallBounce {\n");
    sb.append("    callBounceEnabled: ").append(toIndentedString(callBounceEnabled)).append("\n");
    sb.append("    callBounceMaxRings: ").append(toIndentedString(callBounceMaxRings)).append("\n");
    sb.append("    agentUnavailableEnabled: ").append(toIndentedString(agentUnavailableEnabled)).append("\n");
    sb.append("    alertAgentEnabled: ").append(toIndentedString(alertAgentEnabled)).append("\n");
    sb.append("    alertAgentMaxSeconds: ").append(toIndentedString(alertAgentMaxSeconds)).append("\n");
    sb.append("    callBounceOnHoldEnabled: ").append(toIndentedString(callBounceOnHoldEnabled)).append("\n");
    sb.append("    callBounceOnHoldMaxSeconds: ").append(toIndentedString(callBounceOnHoldMaxSeconds)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("callBounceEnabled");
    openapiFields.add("callBounceMaxRings");
    openapiFields.add("agentUnavailableEnabled");
    openapiFields.add("alertAgentEnabled");
    openapiFields.add("alertAgentMaxSeconds");
    openapiFields.add("callBounceOnHoldEnabled");
    openapiFields.add("callBounceOnHoldMaxSeconds");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to PostCallQueueCallPolicyObjectCallBounce
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!PostCallQueueCallPolicyObjectCallBounce.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in PostCallQueueCallPolicyObjectCallBounce is not found in the empty JSON string", PostCallQueueCallPolicyObjectCallBounce.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!PostCallQueueCallPolicyObjectCallBounce.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `PostCallQueueCallPolicyObjectCallBounce` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!PostCallQueueCallPolicyObjectCallBounce.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'PostCallQueueCallPolicyObjectCallBounce' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<PostCallQueueCallPolicyObjectCallBounce> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(PostCallQueueCallPolicyObjectCallBounce.class));

       return (TypeAdapter<T>) new TypeAdapter<PostCallQueueCallPolicyObjectCallBounce>() {
           @Override
           public void write(JsonWriter out, PostCallQueueCallPolicyObjectCallBounce value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public PostCallQueueCallPolicyObjectCallBounce read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of PostCallQueueCallPolicyObjectCallBounce given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of PostCallQueueCallPolicyObjectCallBounce
   * @throws IOException if the JSON string is invalid with respect to PostCallQueueCallPolicyObjectCallBounce
   */
  public static PostCallQueueCallPolicyObjectCallBounce fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, PostCallQueueCallPolicyObjectCallBounce.class);
  }

  /**
   * Convert an instance of PostCallQueueCallPolicyObjectCallBounce to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

