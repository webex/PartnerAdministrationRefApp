// Copyright 2025 Cisco Systems Inc.
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in
// all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
// THE SOFTWARE.

/*
 * All Webex calling API
 * Webex calling API specifications
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.CreateAHuntGroupRequestCallPoliciesBusinessContinuity;
import org.openapitools.client.model.CreateAHuntGroupRequestCallPoliciesBusinessContinuityRedirect;
import org.openapitools.client.model.CreateAHuntGroupRequestCallPoliciesBusyRedirect;
import org.openapitools.client.model.GetDetailsForAHuntGroup200ResponseCallPoliciesNoAnswer;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Policy controlling how calls are routed to agents.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-11-13T15:45:43.258095Z[Europe/Dublin]", comments = "Generator version: 7.9.0")
public class GetDetailsForAHuntGroup200ResponseCallPolicies {
  /**
   * Call routing policy used to dispatch calls to agents.
   */
  @JsonAdapter(PolicyEnum.Adapter.class)
  public enum PolicyEnum {
    CIRCULAR("CIRCULAR"),
    
    REGULAR("REGULAR"),
    
    SIMULTANEOUS("SIMULTANEOUS"),
    
    UNIFORM("UNIFORM"),
    
    WEIGHTED("WEIGHTED"),
    
    UNIFORM2("UNIFORM");

    private String value;

    PolicyEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static PolicyEnum fromValue(String value) {
      for (PolicyEnum b : PolicyEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<PolicyEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final PolicyEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public PolicyEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return PolicyEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      PolicyEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_POLICY = "policy";
  @SerializedName(SERIALIZED_NAME_POLICY)
  private PolicyEnum policy;

  public static final String SERIALIZED_NAME_WAITING_ENABLED = "waitingEnabled";
  @SerializedName(SERIALIZED_NAME_WAITING_ENABLED)
  private Boolean waitingEnabled;

  public static final String SERIALIZED_NAME_GROUP_BUSY_ENABLED = "groupBusyEnabled";
  @SerializedName(SERIALIZED_NAME_GROUP_BUSY_ENABLED)
  private Boolean groupBusyEnabled;

  public static final String SERIALIZED_NAME_ALLOW_MEMBERS_TO_CONTROL_GROUP_BUSY_ENABLED = "allowMembersToControlGroupBusyEnabled";
  @SerializedName(SERIALIZED_NAME_ALLOW_MEMBERS_TO_CONTROL_GROUP_BUSY_ENABLED)
  private Boolean allowMembersToControlGroupBusyEnabled;

  public static final String SERIALIZED_NAME_NO_ANSWER = "noAnswer";
  @SerializedName(SERIALIZED_NAME_NO_ANSWER)
  private GetDetailsForAHuntGroup200ResponseCallPoliciesNoAnswer noAnswer;

  public static final String SERIALIZED_NAME_BUSY_REDIRECT = "busyRedirect";
  @SerializedName(SERIALIZED_NAME_BUSY_REDIRECT)
  private CreateAHuntGroupRequestCallPoliciesBusyRedirect busyRedirect;

  public static final String SERIALIZED_NAME_BUSINESS_CONTINUITY_REDIRECT = "businessContinuityRedirect";
  @SerializedName(SERIALIZED_NAME_BUSINESS_CONTINUITY_REDIRECT)
  private CreateAHuntGroupRequestCallPoliciesBusinessContinuityRedirect businessContinuityRedirect;

  public static final String SERIALIZED_NAME_BUSINESS_CONTINUITY = "businessContinuity";
  @SerializedName(SERIALIZED_NAME_BUSINESS_CONTINUITY)
  private CreateAHuntGroupRequestCallPoliciesBusinessContinuity businessContinuity;

  public GetDetailsForAHuntGroup200ResponseCallPolicies() {
  }

  public GetDetailsForAHuntGroup200ResponseCallPolicies policy(PolicyEnum policy) {
    this.policy = policy;
    return this;
  }

  /**
   * Call routing policy used to dispatch calls to agents.
   * @return policy
   */
  @javax.annotation.Nonnull
  public PolicyEnum getPolicy() {
    return policy;
  }

  public void setPolicy(PolicyEnum policy) {
    this.policy = policy;
  }


  public GetDetailsForAHuntGroup200ResponseCallPolicies waitingEnabled(Boolean waitingEnabled) {
    this.waitingEnabled = waitingEnabled;
    return this;
  }

  /**
   * If &#x60;false&#x60;, then the option is treated as \&quot;Advance when busy\&quot;. The hunt group won&#39;t ring agents when they&#39;re on a call and advances to the next agent. If a hunt group agent has call waiting enabled and the call is advanced to them, the call waits until that hunt group agent isn&#39;t busy.
   * @return waitingEnabled
   */
  @javax.annotation.Nullable
  public Boolean getWaitingEnabled() {
    return waitingEnabled;
  }

  public void setWaitingEnabled(Boolean waitingEnabled) {
    this.waitingEnabled = waitingEnabled;
  }


  public GetDetailsForAHuntGroup200ResponseCallPolicies groupBusyEnabled(Boolean groupBusyEnabled) {
    this.groupBusyEnabled = groupBusyEnabled;
    return this;
  }

  /**
   * When &#x60;true&#x60;, the hunt group busy status will be set to busy. All new calls will get busy treatment. If &#x60;busyRedirect&#x60; is enabled, the calls are routed to the destination specified in &#x60;busyRedirect&#x60;.
   * @return groupBusyEnabled
   */
  @javax.annotation.Nullable
  public Boolean getGroupBusyEnabled() {
    return groupBusyEnabled;
  }

  public void setGroupBusyEnabled(Boolean groupBusyEnabled) {
    this.groupBusyEnabled = groupBusyEnabled;
  }


  public GetDetailsForAHuntGroup200ResponseCallPolicies allowMembersToControlGroupBusyEnabled(Boolean allowMembersToControlGroupBusyEnabled) {
    this.allowMembersToControlGroupBusyEnabled = allowMembersToControlGroupBusyEnabled;
    return this;
  }

  /**
   * When &#x60;true&#x60;, agents can change the hunt group busy status.
   * @return allowMembersToControlGroupBusyEnabled
   */
  @javax.annotation.Nullable
  public Boolean getAllowMembersToControlGroupBusyEnabled() {
    return allowMembersToControlGroupBusyEnabled;
  }

  public void setAllowMembersToControlGroupBusyEnabled(Boolean allowMembersToControlGroupBusyEnabled) {
    this.allowMembersToControlGroupBusyEnabled = allowMembersToControlGroupBusyEnabled;
  }


  public GetDetailsForAHuntGroup200ResponseCallPolicies noAnswer(GetDetailsForAHuntGroup200ResponseCallPoliciesNoAnswer noAnswer) {
    this.noAnswer = noAnswer;
    return this;
  }

  /**
   * Get noAnswer
   * @return noAnswer
   */
  @javax.annotation.Nonnull
  public GetDetailsForAHuntGroup200ResponseCallPoliciesNoAnswer getNoAnswer() {
    return noAnswer;
  }

  public void setNoAnswer(GetDetailsForAHuntGroup200ResponseCallPoliciesNoAnswer noAnswer) {
    this.noAnswer = noAnswer;
  }


  public GetDetailsForAHuntGroup200ResponseCallPolicies busyRedirect(CreateAHuntGroupRequestCallPoliciesBusyRedirect busyRedirect) {
    this.busyRedirect = busyRedirect;
    return this;
  }

  /**
   * Get busyRedirect
   * @return busyRedirect
   */
  @javax.annotation.Nullable
  public CreateAHuntGroupRequestCallPoliciesBusyRedirect getBusyRedirect() {
    return busyRedirect;
  }

  public void setBusyRedirect(CreateAHuntGroupRequestCallPoliciesBusyRedirect busyRedirect) {
    this.busyRedirect = busyRedirect;
  }


  public GetDetailsForAHuntGroup200ResponseCallPolicies businessContinuityRedirect(CreateAHuntGroupRequestCallPoliciesBusinessContinuityRedirect businessContinuityRedirect) {
    this.businessContinuityRedirect = businessContinuityRedirect;
    return this;
  }

  /**
   * Get businessContinuityRedirect
   * @return businessContinuityRedirect
   */
  @javax.annotation.Nullable
  public CreateAHuntGroupRequestCallPoliciesBusinessContinuityRedirect getBusinessContinuityRedirect() {
    return businessContinuityRedirect;
  }

  public void setBusinessContinuityRedirect(CreateAHuntGroupRequestCallPoliciesBusinessContinuityRedirect businessContinuityRedirect) {
    this.businessContinuityRedirect = businessContinuityRedirect;
  }


  public GetDetailsForAHuntGroup200ResponseCallPolicies businessContinuity(CreateAHuntGroupRequestCallPoliciesBusinessContinuity businessContinuity) {
    this.businessContinuity = businessContinuity;
    return this;
  }

  /**
   * Get businessContinuity
   * @return businessContinuity
   */
  @javax.annotation.Nonnull
  public CreateAHuntGroupRequestCallPoliciesBusinessContinuity getBusinessContinuity() {
    return businessContinuity;
  }

  public void setBusinessContinuity(CreateAHuntGroupRequestCallPoliciesBusinessContinuity businessContinuity) {
    this.businessContinuity = businessContinuity;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GetDetailsForAHuntGroup200ResponseCallPolicies getDetailsForAHuntGroup200ResponseCallPolicies = (GetDetailsForAHuntGroup200ResponseCallPolicies) o;
    return Objects.equals(this.policy, getDetailsForAHuntGroup200ResponseCallPolicies.policy) &&
        Objects.equals(this.waitingEnabled, getDetailsForAHuntGroup200ResponseCallPolicies.waitingEnabled) &&
        Objects.equals(this.groupBusyEnabled, getDetailsForAHuntGroup200ResponseCallPolicies.groupBusyEnabled) &&
        Objects.equals(this.allowMembersToControlGroupBusyEnabled, getDetailsForAHuntGroup200ResponseCallPolicies.allowMembersToControlGroupBusyEnabled) &&
        Objects.equals(this.noAnswer, getDetailsForAHuntGroup200ResponseCallPolicies.noAnswer) &&
        Objects.equals(this.busyRedirect, getDetailsForAHuntGroup200ResponseCallPolicies.busyRedirect) &&
        Objects.equals(this.businessContinuityRedirect, getDetailsForAHuntGroup200ResponseCallPolicies.businessContinuityRedirect) &&
        Objects.equals(this.businessContinuity, getDetailsForAHuntGroup200ResponseCallPolicies.businessContinuity);
  }

  @Override
  public int hashCode() {
    return Objects.hash(policy, waitingEnabled, groupBusyEnabled, allowMembersToControlGroupBusyEnabled, noAnswer, busyRedirect, businessContinuityRedirect, businessContinuity);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GetDetailsForAHuntGroup200ResponseCallPolicies {\n");
    sb.append("    policy: ").append(toIndentedString(policy)).append("\n");
    sb.append("    waitingEnabled: ").append(toIndentedString(waitingEnabled)).append("\n");
    sb.append("    groupBusyEnabled: ").append(toIndentedString(groupBusyEnabled)).append("\n");
    sb.append("    allowMembersToControlGroupBusyEnabled: ").append(toIndentedString(allowMembersToControlGroupBusyEnabled)).append("\n");
    sb.append("    noAnswer: ").append(toIndentedString(noAnswer)).append("\n");
    sb.append("    busyRedirect: ").append(toIndentedString(busyRedirect)).append("\n");
    sb.append("    businessContinuityRedirect: ").append(toIndentedString(businessContinuityRedirect)).append("\n");
    sb.append("    businessContinuity: ").append(toIndentedString(businessContinuity)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("policy");
    openapiFields.add("waitingEnabled");
    openapiFields.add("groupBusyEnabled");
    openapiFields.add("allowMembersToControlGroupBusyEnabled");
    openapiFields.add("noAnswer");
    openapiFields.add("busyRedirect");
    openapiFields.add("businessContinuityRedirect");
    openapiFields.add("businessContinuity");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("policy");
    openapiRequiredFields.add("noAnswer");
    openapiRequiredFields.add("businessContinuity");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GetDetailsForAHuntGroup200ResponseCallPolicies
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GetDetailsForAHuntGroup200ResponseCallPolicies.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GetDetailsForAHuntGroup200ResponseCallPolicies is not found in the empty JSON string", GetDetailsForAHuntGroup200ResponseCallPolicies.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GetDetailsForAHuntGroup200ResponseCallPolicies.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GetDetailsForAHuntGroup200ResponseCallPolicies` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : GetDetailsForAHuntGroup200ResponseCallPolicies.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if (!jsonObj.get("policy").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `policy` to be a primitive type in the JSON string but got `%s`", jsonObj.get("policy").toString()));
      }
      // validate the required field `policy`
      PolicyEnum.validateJsonElement(jsonObj.get("policy"));
      // validate the required field `noAnswer`
      GetDetailsForAHuntGroup200ResponseCallPoliciesNoAnswer.validateJsonElement(jsonObj.get("noAnswer"));
      // validate the optional field `busyRedirect`
      if (jsonObj.get("busyRedirect") != null && !jsonObj.get("busyRedirect").isJsonNull()) {
        CreateAHuntGroupRequestCallPoliciesBusyRedirect.validateJsonElement(jsonObj.get("busyRedirect"));
      }
      // validate the optional field `businessContinuityRedirect`
      if (jsonObj.get("businessContinuityRedirect") != null && !jsonObj.get("businessContinuityRedirect").isJsonNull()) {
        CreateAHuntGroupRequestCallPoliciesBusinessContinuityRedirect.validateJsonElement(jsonObj.get("businessContinuityRedirect"));
      }
      // validate the required field `businessContinuity`
      CreateAHuntGroupRequestCallPoliciesBusinessContinuity.validateJsonElement(jsonObj.get("businessContinuity"));
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GetDetailsForAHuntGroup200ResponseCallPolicies.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GetDetailsForAHuntGroup200ResponseCallPolicies' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GetDetailsForAHuntGroup200ResponseCallPolicies> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GetDetailsForAHuntGroup200ResponseCallPolicies.class));

       return (TypeAdapter<T>) new TypeAdapter<GetDetailsForAHuntGroup200ResponseCallPolicies>() {
           @Override
           public void write(JsonWriter out, GetDetailsForAHuntGroup200ResponseCallPolicies value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GetDetailsForAHuntGroup200ResponseCallPolicies read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GetDetailsForAHuntGroup200ResponseCallPolicies given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GetDetailsForAHuntGroup200ResponseCallPolicies
   * @throws IOException if the JSON string is invalid with respect to GetDetailsForAHuntGroup200ResponseCallPolicies
   */
  public static GetDetailsForAHuntGroup200ResponseCallPolicies fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GetDetailsForAHuntGroup200ResponseCallPolicies.class);
  }

  /**
   * Convert an instance of GetDetailsForAHuntGroup200ResponseCallPolicies to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

