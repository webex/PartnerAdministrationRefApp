// Copyright 2025 Cisco Systems Inc.
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in
// all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
// THE SOFTWARE.

/*
 * All Webex calling API
 * Webex calling API specifications
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.CreateAHuntGroupRequestCallPolicies;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * UpdateAHuntGroupRequest
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-11-13T15:45:43.258095Z[Europe/Dublin]", comments = "Generator version: 7.9.0")
public class UpdateAHuntGroupRequest {
  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_PHONE_NUMBER = "phoneNumber";
  @SerializedName(SERIALIZED_NAME_PHONE_NUMBER)
  private String phoneNumber;

  public static final String SERIALIZED_NAME_EXTENSION = "extension";
  @SerializedName(SERIALIZED_NAME_EXTENSION)
  private String extension;

  public static final String SERIALIZED_NAME_DISTINCTIVE_RING = "distinctiveRing";
  @SerializedName(SERIALIZED_NAME_DISTINCTIVE_RING)
  private Boolean distinctiveRing;

  public static final String SERIALIZED_NAME_ALTERNATE_NUMBERS = "alternateNumbers";
  @SerializedName(SERIALIZED_NAME_ALTERNATE_NUMBERS)
  private List<Object> alternateNumbers = new ArrayList<>();

  public static final String SERIALIZED_NAME_LANGUAGE_CODE = "languageCode";
  @SerializedName(SERIALIZED_NAME_LANGUAGE_CODE)
  private String languageCode;

  public static final String SERIALIZED_NAME_FIRST_NAME = "firstName";
  @SerializedName(SERIALIZED_NAME_FIRST_NAME)
  private String firstName;

  public static final String SERIALIZED_NAME_LAST_NAME = "lastName";
  @SerializedName(SERIALIZED_NAME_LAST_NAME)
  private String lastName;

  public static final String SERIALIZED_NAME_TIME_ZONE = "timeZone";
  @SerializedName(SERIALIZED_NAME_TIME_ZONE)
  private String timeZone;

  public static final String SERIALIZED_NAME_CALL_POLICIES = "callPolicies";
  @SerializedName(SERIALIZED_NAME_CALL_POLICIES)
  private CreateAHuntGroupRequestCallPolicies callPolicies;

  public static final String SERIALIZED_NAME_AGENTS = "agents";
  @SerializedName(SERIALIZED_NAME_AGENTS)
  private List<Object> agents = new ArrayList<>();

  public static final String SERIALIZED_NAME_ENABLED = "enabled";
  @SerializedName(SERIALIZED_NAME_ENABLED)
  private Boolean enabled;

  public static final String SERIALIZED_NAME_HUNT_GROUP_CALLER_ID_FOR_OUTGOING_CALLS_ENABLED = "huntGroupCallerIdForOutgoingCallsEnabled";
  @SerializedName(SERIALIZED_NAME_HUNT_GROUP_CALLER_ID_FOR_OUTGOING_CALLS_ENABLED)
  private Boolean huntGroupCallerIdForOutgoingCallsEnabled;

  public UpdateAHuntGroupRequest() {
  }

  public UpdateAHuntGroupRequest name(String name) {
    this.name = name;
    return this;
  }

  /**
   * Unique name for the hunt group.
   * @return name
   */
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }


  public UpdateAHuntGroupRequest phoneNumber(String phoneNumber) {
    this.phoneNumber = phoneNumber;
    return this;
  }

  /**
   * Primary phone number of the hunt group.
   * @return phoneNumber
   */
  @javax.annotation.Nullable
  public String getPhoneNumber() {
    return phoneNumber;
  }

  public void setPhoneNumber(String phoneNumber) {
    this.phoneNumber = phoneNumber;
  }


  public UpdateAHuntGroupRequest extension(String extension) {
    this.extension = extension;
    return this;
  }

  /**
   * Primary phone extension of the hunt group.
   * @return extension
   */
  @javax.annotation.Nullable
  public String getExtension() {
    return extension;
  }

  public void setExtension(String extension) {
    this.extension = extension;
  }


  public UpdateAHuntGroupRequest distinctiveRing(Boolean distinctiveRing) {
    this.distinctiveRing = distinctiveRing;
    return this;
  }

  /**
   * Whether or not the hunt group has the distinctive ring option enabled.
   * @return distinctiveRing
   */
  @javax.annotation.Nullable
  public Boolean getDistinctiveRing() {
    return distinctiveRing;
  }

  public void setDistinctiveRing(Boolean distinctiveRing) {
    this.distinctiveRing = distinctiveRing;
  }


  public UpdateAHuntGroupRequest alternateNumbers(List<Object> alternateNumbers) {
    this.alternateNumbers = alternateNumbers;
    return this;
  }

  public UpdateAHuntGroupRequest addAlternateNumbersItem(Object alternateNumbersItem) {
    if (this.alternateNumbers == null) {
      this.alternateNumbers = new ArrayList<>();
    }
    this.alternateNumbers.add(alternateNumbersItem);
    return this;
  }

  /**
   * The alternate numbers feature allows you to assign multiple phone numbers or extensions to a hunt group. Each number will reach the same greeting and each menu will function identically to the main number. The alternate numbers option enables you to have up to ten (10) phone numbers ring into the hunt group.
   * @return alternateNumbers
   */
  @javax.annotation.Nullable
  public List<Object> getAlternateNumbers() {
    return alternateNumbers;
  }

  public void setAlternateNumbers(List<Object> alternateNumbers) {
    this.alternateNumbers = alternateNumbers;
  }


  public UpdateAHuntGroupRequest languageCode(String languageCode) {
    this.languageCode = languageCode;
    return this;
  }

  /**
   * Language code.
   * @return languageCode
   */
  @javax.annotation.Nullable
  public String getLanguageCode() {
    return languageCode;
  }

  public void setLanguageCode(String languageCode) {
    this.languageCode = languageCode;
  }


  public UpdateAHuntGroupRequest firstName(String firstName) {
    this.firstName = firstName;
    return this;
  }

  /**
   * First name to be shown when calls are forwarded out of this hunt group. Defaults to &#x60;.&#x60;.
   * @return firstName
   */
  @javax.annotation.Nullable
  public String getFirstName() {
    return firstName;
  }

  public void setFirstName(String firstName) {
    this.firstName = firstName;
  }


  public UpdateAHuntGroupRequest lastName(String lastName) {
    this.lastName = lastName;
    return this;
  }

  /**
   * Last name to be shown when calls are forwarded out of this hunt group. Defaults to the phone number if set, otherwise defaults to call group name.
   * @return lastName
   */
  @javax.annotation.Nullable
  public String getLastName() {
    return lastName;
  }

  public void setLastName(String lastName) {
    this.lastName = lastName;
  }


  public UpdateAHuntGroupRequest timeZone(String timeZone) {
    this.timeZone = timeZone;
    return this;
  }

  /**
   * Time zone for the hunt group.
   * @return timeZone
   */
  @javax.annotation.Nullable
  public String getTimeZone() {
    return timeZone;
  }

  public void setTimeZone(String timeZone) {
    this.timeZone = timeZone;
  }


  public UpdateAHuntGroupRequest callPolicies(CreateAHuntGroupRequestCallPolicies callPolicies) {
    this.callPolicies = callPolicies;
    return this;
  }

  /**
   * Get callPolicies
   * @return callPolicies
   */
  @javax.annotation.Nullable
  public CreateAHuntGroupRequestCallPolicies getCallPolicies() {
    return callPolicies;
  }

  public void setCallPolicies(CreateAHuntGroupRequestCallPolicies callPolicies) {
    this.callPolicies = callPolicies;
  }


  public UpdateAHuntGroupRequest agents(List<Object> agents) {
    this.agents = agents;
    return this;
  }

  public UpdateAHuntGroupRequest addAgentsItem(Object agentsItem) {
    if (this.agents == null) {
      this.agents = new ArrayList<>();
    }
    this.agents.add(agentsItem);
    return this;
  }

  /**
   * People, workspaces and virtual lines that are eligible to  receive calls.
   * @return agents
   */
  @javax.annotation.Nullable
  public List<Object> getAgents() {
    return agents;
  }

  public void setAgents(List<Object> agents) {
    this.agents = agents;
  }


  public UpdateAHuntGroupRequest enabled(Boolean enabled) {
    this.enabled = enabled;
    return this;
  }

  /**
   * Whether or not the hunt group is enabled.
   * @return enabled
   */
  @javax.annotation.Nullable
  public Boolean getEnabled() {
    return enabled;
  }

  public void setEnabled(Boolean enabled) {
    this.enabled = enabled;
  }


  public UpdateAHuntGroupRequest huntGroupCallerIdForOutgoingCallsEnabled(Boolean huntGroupCallerIdForOutgoingCallsEnabled) {
    this.huntGroupCallerIdForOutgoingCallsEnabled = huntGroupCallerIdForOutgoingCallsEnabled;
    return this;
  }

  /**
   * Enable the hunt group to be used as the caller ID when the agent places outgoing calls. When set to true the hunt group&#39;s caller ID will be used.
   * @return huntGroupCallerIdForOutgoingCallsEnabled
   */
  @javax.annotation.Nullable
  public Boolean getHuntGroupCallerIdForOutgoingCallsEnabled() {
    return huntGroupCallerIdForOutgoingCallsEnabled;
  }

  public void setHuntGroupCallerIdForOutgoingCallsEnabled(Boolean huntGroupCallerIdForOutgoingCallsEnabled) {
    this.huntGroupCallerIdForOutgoingCallsEnabled = huntGroupCallerIdForOutgoingCallsEnabled;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UpdateAHuntGroupRequest updateAHuntGroupRequest = (UpdateAHuntGroupRequest) o;
    return Objects.equals(this.name, updateAHuntGroupRequest.name) &&
        Objects.equals(this.phoneNumber, updateAHuntGroupRequest.phoneNumber) &&
        Objects.equals(this.extension, updateAHuntGroupRequest.extension) &&
        Objects.equals(this.distinctiveRing, updateAHuntGroupRequest.distinctiveRing) &&
        Objects.equals(this.alternateNumbers, updateAHuntGroupRequest.alternateNumbers) &&
        Objects.equals(this.languageCode, updateAHuntGroupRequest.languageCode) &&
        Objects.equals(this.firstName, updateAHuntGroupRequest.firstName) &&
        Objects.equals(this.lastName, updateAHuntGroupRequest.lastName) &&
        Objects.equals(this.timeZone, updateAHuntGroupRequest.timeZone) &&
        Objects.equals(this.callPolicies, updateAHuntGroupRequest.callPolicies) &&
        Objects.equals(this.agents, updateAHuntGroupRequest.agents) &&
        Objects.equals(this.enabled, updateAHuntGroupRequest.enabled) &&
        Objects.equals(this.huntGroupCallerIdForOutgoingCallsEnabled, updateAHuntGroupRequest.huntGroupCallerIdForOutgoingCallsEnabled);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, phoneNumber, extension, distinctiveRing, alternateNumbers, languageCode, firstName, lastName, timeZone, callPolicies, agents, enabled, huntGroupCallerIdForOutgoingCallsEnabled);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UpdateAHuntGroupRequest {\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    phoneNumber: ").append(toIndentedString(phoneNumber)).append("\n");
    sb.append("    extension: ").append(toIndentedString(extension)).append("\n");
    sb.append("    distinctiveRing: ").append(toIndentedString(distinctiveRing)).append("\n");
    sb.append("    alternateNumbers: ").append(toIndentedString(alternateNumbers)).append("\n");
    sb.append("    languageCode: ").append(toIndentedString(languageCode)).append("\n");
    sb.append("    firstName: ").append(toIndentedString(firstName)).append("\n");
    sb.append("    lastName: ").append(toIndentedString(lastName)).append("\n");
    sb.append("    timeZone: ").append(toIndentedString(timeZone)).append("\n");
    sb.append("    callPolicies: ").append(toIndentedString(callPolicies)).append("\n");
    sb.append("    agents: ").append(toIndentedString(agents)).append("\n");
    sb.append("    enabled: ").append(toIndentedString(enabled)).append("\n");
    sb.append("    huntGroupCallerIdForOutgoingCallsEnabled: ").append(toIndentedString(huntGroupCallerIdForOutgoingCallsEnabled)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("name");
    openapiFields.add("phoneNumber");
    openapiFields.add("extension");
    openapiFields.add("distinctiveRing");
    openapiFields.add("alternateNumbers");
    openapiFields.add("languageCode");
    openapiFields.add("firstName");
    openapiFields.add("lastName");
    openapiFields.add("timeZone");
    openapiFields.add("callPolicies");
    openapiFields.add("agents");
    openapiFields.add("enabled");
    openapiFields.add("huntGroupCallerIdForOutgoingCallsEnabled");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to UpdateAHuntGroupRequest
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!UpdateAHuntGroupRequest.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in UpdateAHuntGroupRequest is not found in the empty JSON string", UpdateAHuntGroupRequest.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!UpdateAHuntGroupRequest.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `UpdateAHuntGroupRequest` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      if ((jsonObj.get("phoneNumber") != null && !jsonObj.get("phoneNumber").isJsonNull()) && !jsonObj.get("phoneNumber").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `phoneNumber` to be a primitive type in the JSON string but got `%s`", jsonObj.get("phoneNumber").toString()));
      }
      if ((jsonObj.get("extension") != null && !jsonObj.get("extension").isJsonNull()) && !jsonObj.get("extension").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `extension` to be a primitive type in the JSON string but got `%s`", jsonObj.get("extension").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("alternateNumbers") != null && !jsonObj.get("alternateNumbers").isJsonNull() && !jsonObj.get("alternateNumbers").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `alternateNumbers` to be an array in the JSON string but got `%s`", jsonObj.get("alternateNumbers").toString()));
      }
      if ((jsonObj.get("languageCode") != null && !jsonObj.get("languageCode").isJsonNull()) && !jsonObj.get("languageCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `languageCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("languageCode").toString()));
      }
      if ((jsonObj.get("firstName") != null && !jsonObj.get("firstName").isJsonNull()) && !jsonObj.get("firstName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `firstName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("firstName").toString()));
      }
      if ((jsonObj.get("lastName") != null && !jsonObj.get("lastName").isJsonNull()) && !jsonObj.get("lastName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `lastName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("lastName").toString()));
      }
      if ((jsonObj.get("timeZone") != null && !jsonObj.get("timeZone").isJsonNull()) && !jsonObj.get("timeZone").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `timeZone` to be a primitive type in the JSON string but got `%s`", jsonObj.get("timeZone").toString()));
      }
      // validate the optional field `callPolicies`
      if (jsonObj.get("callPolicies") != null && !jsonObj.get("callPolicies").isJsonNull()) {
        CreateAHuntGroupRequestCallPolicies.validateJsonElement(jsonObj.get("callPolicies"));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("agents") != null && !jsonObj.get("agents").isJsonNull() && !jsonObj.get("agents").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `agents` to be an array in the JSON string but got `%s`", jsonObj.get("agents").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!UpdateAHuntGroupRequest.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'UpdateAHuntGroupRequest' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<UpdateAHuntGroupRequest> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(UpdateAHuntGroupRequest.class));

       return (TypeAdapter<T>) new TypeAdapter<UpdateAHuntGroupRequest>() {
           @Override
           public void write(JsonWriter out, UpdateAHuntGroupRequest value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public UpdateAHuntGroupRequest read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of UpdateAHuntGroupRequest given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of UpdateAHuntGroupRequest
   * @throws IOException if the JSON string is invalid with respect to UpdateAHuntGroupRequest
   */
  public static UpdateAHuntGroupRequest fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, UpdateAHuntGroupRequest.class);
  }

  /**
   * Convert an instance of UpdateAHuntGroupRequest to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

