// Copyright 2025 Cisco Systems Inc.
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in
// all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
// THE SOFTWARE.

/*
 * All Webex calling API
 * Webex calling API specifications
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.Arrays;
import org.openapitools.client.model.VoiceMailPartyInformation;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * VoiceMessageDetails
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-11-13T15:45:43.258095Z[Europe/Dublin]", comments = "Generator version: 7.9.0")
public class VoiceMessageDetails {
  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_DURATION = "duration";
  @SerializedName(SERIALIZED_NAME_DURATION)
  private BigDecimal duration;

  public static final String SERIALIZED_NAME_CALLING_PARTY = "callingParty";
  @SerializedName(SERIALIZED_NAME_CALLING_PARTY)
  private VoiceMailPartyInformation callingParty;

  public static final String SERIALIZED_NAME_URGENT = "urgent";
  @SerializedName(SERIALIZED_NAME_URGENT)
  private Boolean urgent;

  public static final String SERIALIZED_NAME_CONFIDENTIAL = "confidential";
  @SerializedName(SERIALIZED_NAME_CONFIDENTIAL)
  private Boolean confidential;

  public static final String SERIALIZED_NAME_READ = "read";
  @SerializedName(SERIALIZED_NAME_READ)
  private Boolean read;

  public static final String SERIALIZED_NAME_FAX_PAGE_COUNT = "faxPageCount";
  @SerializedName(SERIALIZED_NAME_FAX_PAGE_COUNT)
  private BigDecimal faxPageCount;

  public static final String SERIALIZED_NAME_CREATED = "created";
  @SerializedName(SERIALIZED_NAME_CREATED)
  private String created;

  public VoiceMessageDetails() {
  }

  public VoiceMessageDetails id(String id) {
    this.id = id;
    return this;
  }

  /**
   * The message identifier of the voicemail message.
   * @return id
   */
  @javax.annotation.Nonnull
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }


  public VoiceMessageDetails duration(BigDecimal duration) {
    this.duration = duration;
    return this;
  }

  /**
   *  The duration (in seconds) of the voicemail message.  Duration is not present for a FAX message.
   * @return duration
   */
  @javax.annotation.Nullable
  public BigDecimal getDuration() {
    return duration;
  }

  public void setDuration(BigDecimal duration) {
    this.duration = duration;
  }


  public VoiceMessageDetails callingParty(VoiceMailPartyInformation callingParty) {
    this.callingParty = callingParty;
    return this;
  }

  /**
   * Get callingParty
   * @return callingParty
   */
  @javax.annotation.Nonnull
  public VoiceMailPartyInformation getCallingParty() {
    return callingParty;
  }

  public void setCallingParty(VoiceMailPartyInformation callingParty) {
    this.callingParty = callingParty;
  }


  public VoiceMessageDetails urgent(Boolean urgent) {
    this.urgent = urgent;
    return this;
  }

  /**
   * &#x60;true&#x60; if the voicemail message is urgent.
   * @return urgent
   */
  @javax.annotation.Nullable
  public Boolean getUrgent() {
    return urgent;
  }

  public void setUrgent(Boolean urgent) {
    this.urgent = urgent;
  }


  public VoiceMessageDetails confidential(Boolean confidential) {
    this.confidential = confidential;
    return this;
  }

  /**
   * &#x60;true&#x60; if the voicemail message is confidential.
   * @return confidential
   */
  @javax.annotation.Nullable
  public Boolean getConfidential() {
    return confidential;
  }

  public void setConfidential(Boolean confidential) {
    this.confidential = confidential;
  }


  public VoiceMessageDetails read(Boolean read) {
    this.read = read;
    return this;
  }

  /**
   * &#x60;true&#x60; if the voicemail message has been read.
   * @return read
   */
  @javax.annotation.Nullable
  public Boolean getRead() {
    return read;
  }

  public void setRead(Boolean read) {
    this.read = read;
  }


  public VoiceMessageDetails faxPageCount(BigDecimal faxPageCount) {
    this.faxPageCount = faxPageCount;
    return this;
  }

  /**
   * Number of pages for the FAX.  Only set for a FAX.
   * @return faxPageCount
   */
  @javax.annotation.Nullable
  public BigDecimal getFaxPageCount() {
    return faxPageCount;
  }

  public void setFaxPageCount(BigDecimal faxPageCount) {
    this.faxPageCount = faxPageCount;
  }


  public VoiceMessageDetails created(String created) {
    this.created = created;
    return this;
  }

  /**
   * The date and time the voicemail message was created.
   * @return created
   */
  @javax.annotation.Nonnull
  public String getCreated() {
    return created;
  }

  public void setCreated(String created) {
    this.created = created;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    VoiceMessageDetails voiceMessageDetails = (VoiceMessageDetails) o;
    return Objects.equals(this.id, voiceMessageDetails.id) &&
        Objects.equals(this.duration, voiceMessageDetails.duration) &&
        Objects.equals(this.callingParty, voiceMessageDetails.callingParty) &&
        Objects.equals(this.urgent, voiceMessageDetails.urgent) &&
        Objects.equals(this.confidential, voiceMessageDetails.confidential) &&
        Objects.equals(this.read, voiceMessageDetails.read) &&
        Objects.equals(this.faxPageCount, voiceMessageDetails.faxPageCount) &&
        Objects.equals(this.created, voiceMessageDetails.created);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, duration, callingParty, urgent, confidential, read, faxPageCount, created);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class VoiceMessageDetails {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    duration: ").append(toIndentedString(duration)).append("\n");
    sb.append("    callingParty: ").append(toIndentedString(callingParty)).append("\n");
    sb.append("    urgent: ").append(toIndentedString(urgent)).append("\n");
    sb.append("    confidential: ").append(toIndentedString(confidential)).append("\n");
    sb.append("    read: ").append(toIndentedString(read)).append("\n");
    sb.append("    faxPageCount: ").append(toIndentedString(faxPageCount)).append("\n");
    sb.append("    created: ").append(toIndentedString(created)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("id");
    openapiFields.add("duration");
    openapiFields.add("callingParty");
    openapiFields.add("urgent");
    openapiFields.add("confidential");
    openapiFields.add("read");
    openapiFields.add("faxPageCount");
    openapiFields.add("created");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("id");
    openapiRequiredFields.add("callingParty");
    openapiRequiredFields.add("created");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to VoiceMessageDetails
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!VoiceMessageDetails.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in VoiceMessageDetails is not found in the empty JSON string", VoiceMessageDetails.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!VoiceMessageDetails.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `VoiceMessageDetails` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : VoiceMessageDetails.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if (!jsonObj.get("id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("id").toString()));
      }
      // validate the required field `callingParty`
      VoiceMailPartyInformation.validateJsonElement(jsonObj.get("callingParty"));
      if (!jsonObj.get("created").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `created` to be a primitive type in the JSON string but got `%s`", jsonObj.get("created").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!VoiceMessageDetails.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'VoiceMessageDetails' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<VoiceMessageDetails> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(VoiceMessageDetails.class));

       return (TypeAdapter<T>) new TypeAdapter<VoiceMessageDetails>() {
           @Override
           public void write(JsonWriter out, VoiceMessageDetails value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public VoiceMessageDetails read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of VoiceMessageDetails given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of VoiceMessageDetails
   * @throws IOException if the JSON string is invalid with respect to VoiceMessageDetails
   */
  public static VoiceMessageDetails fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, VoiceMessageDetails.class);
  }

  /**
   * Convert an instance of VoiceMessageDetails to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

