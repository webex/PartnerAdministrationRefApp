// Copyright 2025 Cisco Systems Inc.
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in
// all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
// THE SOFTWARE.

/*
 * All Webex calling API
 * Webex calling API specifications
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.GetAPersonSEmergencyCallbackNumber200ResponseDefaultInfo;
import org.openapitools.client.model.GetAWorkspaceEmergencyCallbackNumber200ResponseDirectLineInfo;
import org.openapitools.client.model.GetAWorkspaceEmergencyCallbackNumber200ResponseLocationECBNInfo;
import org.openapitools.client.model.GetAWorkspaceEmergencyCallbackNumber200ResponseLocationMemberInfo;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * GetAWorkspaceEmergencyCallbackNumber200Response
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-11-13T15:45:43.258095Z[Europe/Dublin]", comments = "Generator version: 7.9.0")
public class GetAWorkspaceEmergencyCallbackNumber200Response {
  /**
   * Selected number type to configure emergency call back.
   */
  @JsonAdapter(SelectedEnum.Adapter.class)
  public enum SelectedEnum {
    DIRECT_LINE("DIRECT_LINE"),
    
    LOCATION_ECBN("LOCATION_ECBN"),
    
    LOCATION_MEMBER_NUMBER("LOCATION_MEMBER_NUMBER"),
    
    NONE("None"),
    
    DIRECT_LINE2("DIRECT_LINE");

    private String value;

    SelectedEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static SelectedEnum fromValue(String value) {
      for (SelectedEnum b : SelectedEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<SelectedEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final SelectedEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public SelectedEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return SelectedEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      SelectedEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_SELECTED = "selected";
  @SerializedName(SERIALIZED_NAME_SELECTED)
  private SelectedEnum selected;

  public static final String SERIALIZED_NAME_DIRECT_LINE_INFO = "directLineInfo";
  @SerializedName(SERIALIZED_NAME_DIRECT_LINE_INFO)
  private GetAWorkspaceEmergencyCallbackNumber200ResponseDirectLineInfo directLineInfo;

  public static final String SERIALIZED_NAME_LOCATION_E_C_B_N_INFO = "locationECBNInfo";
  @SerializedName(SERIALIZED_NAME_LOCATION_E_C_B_N_INFO)
  private GetAWorkspaceEmergencyCallbackNumber200ResponseLocationECBNInfo locationECBNInfo;

  public static final String SERIALIZED_NAME_LOCATION_MEMBER_INFO = "locationMemberInfo";
  @SerializedName(SERIALIZED_NAME_LOCATION_MEMBER_INFO)
  private GetAWorkspaceEmergencyCallbackNumber200ResponseLocationMemberInfo locationMemberInfo;

  public static final String SERIALIZED_NAME_DEFAULT_INFO = "defaultInfo";
  @SerializedName(SERIALIZED_NAME_DEFAULT_INFO)
  private GetAPersonSEmergencyCallbackNumber200ResponseDefaultInfo defaultInfo;

  public GetAWorkspaceEmergencyCallbackNumber200Response() {
  }

  public GetAWorkspaceEmergencyCallbackNumber200Response selected(SelectedEnum selected) {
    this.selected = selected;
    return this;
  }

  /**
   * Selected number type to configure emergency call back.
   * @return selected
   */
  @javax.annotation.Nullable
  public SelectedEnum getSelected() {
    return selected;
  }

  public void setSelected(SelectedEnum selected) {
    this.selected = selected;
  }


  public GetAWorkspaceEmergencyCallbackNumber200Response directLineInfo(GetAWorkspaceEmergencyCallbackNumber200ResponseDirectLineInfo directLineInfo) {
    this.directLineInfo = directLineInfo;
    return this;
  }

  /**
   * Get directLineInfo
   * @return directLineInfo
   */
  @javax.annotation.Nullable
  public GetAWorkspaceEmergencyCallbackNumber200ResponseDirectLineInfo getDirectLineInfo() {
    return directLineInfo;
  }

  public void setDirectLineInfo(GetAWorkspaceEmergencyCallbackNumber200ResponseDirectLineInfo directLineInfo) {
    this.directLineInfo = directLineInfo;
  }


  public GetAWorkspaceEmergencyCallbackNumber200Response locationECBNInfo(GetAWorkspaceEmergencyCallbackNumber200ResponseLocationECBNInfo locationECBNInfo) {
    this.locationECBNInfo = locationECBNInfo;
    return this;
  }

  /**
   * Get locationECBNInfo
   * @return locationECBNInfo
   */
  @javax.annotation.Nullable
  public GetAWorkspaceEmergencyCallbackNumber200ResponseLocationECBNInfo getLocationECBNInfo() {
    return locationECBNInfo;
  }

  public void setLocationECBNInfo(GetAWorkspaceEmergencyCallbackNumber200ResponseLocationECBNInfo locationECBNInfo) {
    this.locationECBNInfo = locationECBNInfo;
  }


  public GetAWorkspaceEmergencyCallbackNumber200Response locationMemberInfo(GetAWorkspaceEmergencyCallbackNumber200ResponseLocationMemberInfo locationMemberInfo) {
    this.locationMemberInfo = locationMemberInfo;
    return this;
  }

  /**
   * Get locationMemberInfo
   * @return locationMemberInfo
   */
  @javax.annotation.Nullable
  public GetAWorkspaceEmergencyCallbackNumber200ResponseLocationMemberInfo getLocationMemberInfo() {
    return locationMemberInfo;
  }

  public void setLocationMemberInfo(GetAWorkspaceEmergencyCallbackNumber200ResponseLocationMemberInfo locationMemberInfo) {
    this.locationMemberInfo = locationMemberInfo;
  }


  public GetAWorkspaceEmergencyCallbackNumber200Response defaultInfo(GetAPersonSEmergencyCallbackNumber200ResponseDefaultInfo defaultInfo) {
    this.defaultInfo = defaultInfo;
    return this;
  }

  /**
   * Get defaultInfo
   * @return defaultInfo
   */
  @javax.annotation.Nullable
  public GetAPersonSEmergencyCallbackNumber200ResponseDefaultInfo getDefaultInfo() {
    return defaultInfo;
  }

  public void setDefaultInfo(GetAPersonSEmergencyCallbackNumber200ResponseDefaultInfo defaultInfo) {
    this.defaultInfo = defaultInfo;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GetAWorkspaceEmergencyCallbackNumber200Response getAWorkspaceEmergencyCallbackNumber200Response = (GetAWorkspaceEmergencyCallbackNumber200Response) o;
    return Objects.equals(this.selected, getAWorkspaceEmergencyCallbackNumber200Response.selected) &&
        Objects.equals(this.directLineInfo, getAWorkspaceEmergencyCallbackNumber200Response.directLineInfo) &&
        Objects.equals(this.locationECBNInfo, getAWorkspaceEmergencyCallbackNumber200Response.locationECBNInfo) &&
        Objects.equals(this.locationMemberInfo, getAWorkspaceEmergencyCallbackNumber200Response.locationMemberInfo) &&
        Objects.equals(this.defaultInfo, getAWorkspaceEmergencyCallbackNumber200Response.defaultInfo);
  }

  @Override
  public int hashCode() {
    return Objects.hash(selected, directLineInfo, locationECBNInfo, locationMemberInfo, defaultInfo);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GetAWorkspaceEmergencyCallbackNumber200Response {\n");
    sb.append("    selected: ").append(toIndentedString(selected)).append("\n");
    sb.append("    directLineInfo: ").append(toIndentedString(directLineInfo)).append("\n");
    sb.append("    locationECBNInfo: ").append(toIndentedString(locationECBNInfo)).append("\n");
    sb.append("    locationMemberInfo: ").append(toIndentedString(locationMemberInfo)).append("\n");
    sb.append("    defaultInfo: ").append(toIndentedString(defaultInfo)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("selected");
    openapiFields.add("directLineInfo");
    openapiFields.add("locationECBNInfo");
    openapiFields.add("locationMemberInfo");
    openapiFields.add("defaultInfo");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GetAWorkspaceEmergencyCallbackNumber200Response
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GetAWorkspaceEmergencyCallbackNumber200Response.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GetAWorkspaceEmergencyCallbackNumber200Response is not found in the empty JSON string", GetAWorkspaceEmergencyCallbackNumber200Response.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GetAWorkspaceEmergencyCallbackNumber200Response.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GetAWorkspaceEmergencyCallbackNumber200Response` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("selected") != null && !jsonObj.get("selected").isJsonNull()) && !jsonObj.get("selected").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `selected` to be a primitive type in the JSON string but got `%s`", jsonObj.get("selected").toString()));
      }
      // validate the optional field `selected`
      if (jsonObj.get("selected") != null && !jsonObj.get("selected").isJsonNull()) {
        SelectedEnum.validateJsonElement(jsonObj.get("selected"));
      }
      // validate the optional field `directLineInfo`
      if (jsonObj.get("directLineInfo") != null && !jsonObj.get("directLineInfo").isJsonNull()) {
        GetAWorkspaceEmergencyCallbackNumber200ResponseDirectLineInfo.validateJsonElement(jsonObj.get("directLineInfo"));
      }
      // validate the optional field `locationECBNInfo`
      if (jsonObj.get("locationECBNInfo") != null && !jsonObj.get("locationECBNInfo").isJsonNull()) {
        GetAWorkspaceEmergencyCallbackNumber200ResponseLocationECBNInfo.validateJsonElement(jsonObj.get("locationECBNInfo"));
      }
      // validate the optional field `locationMemberInfo`
      if (jsonObj.get("locationMemberInfo") != null && !jsonObj.get("locationMemberInfo").isJsonNull()) {
        GetAWorkspaceEmergencyCallbackNumber200ResponseLocationMemberInfo.validateJsonElement(jsonObj.get("locationMemberInfo"));
      }
      // validate the optional field `defaultInfo`
      if (jsonObj.get("defaultInfo") != null && !jsonObj.get("defaultInfo").isJsonNull()) {
        GetAPersonSEmergencyCallbackNumber200ResponseDefaultInfo.validateJsonElement(jsonObj.get("defaultInfo"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GetAWorkspaceEmergencyCallbackNumber200Response.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GetAWorkspaceEmergencyCallbackNumber200Response' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GetAWorkspaceEmergencyCallbackNumber200Response> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GetAWorkspaceEmergencyCallbackNumber200Response.class));

       return (TypeAdapter<T>) new TypeAdapter<GetAWorkspaceEmergencyCallbackNumber200Response>() {
           @Override
           public void write(JsonWriter out, GetAWorkspaceEmergencyCallbackNumber200Response value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GetAWorkspaceEmergencyCallbackNumber200Response read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GetAWorkspaceEmergencyCallbackNumber200Response given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GetAWorkspaceEmergencyCallbackNumber200Response
   * @throws IOException if the JSON string is invalid with respect to GetAWorkspaceEmergencyCallbackNumber200Response
   */
  public static GetAWorkspaceEmergencyCallbackNumber200Response fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GetAWorkspaceEmergencyCallbackNumber200Response.class);
  }

  /**
   * Convert an instance of GetAWorkspaceEmergencyCallbackNumber200Response to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

