// Copyright 2025 Cisco Systems Inc.
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in
// all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
// THE SOFTWARE.

/*
 * All Webex calling API
 * Webex calling API specifications
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.GetTheDetailsOfASpecificDECTNetworkBaseStation200ResponseHandsetsInnerLinesInnerLocation;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * GetTheDetailsOfASpecificDECTNetworkBaseStation200ResponseHandsetsInnerLinesInner
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-11-13T15:45:43.258095Z[Europe/Dublin]", comments = "Generator version: 7.9.0")
public class GetTheDetailsOfASpecificDECTNetworkBaseStation200ResponseHandsetsInnerLinesInner {
  public static final String SERIALIZED_NAME_MEMBER_ID = "memberId";
  @SerializedName(SERIALIZED_NAME_MEMBER_ID)
  private String memberId;

  public static final String SERIALIZED_NAME_FIRST_NAME = "firstName";
  @SerializedName(SERIALIZED_NAME_FIRST_NAME)
  private String firstName;

  public static final String SERIALIZED_NAME_LAST_NAME = "lastName";
  @SerializedName(SERIALIZED_NAME_LAST_NAME)
  private String lastName;

  public static final String SERIALIZED_NAME_EXTERNAL = "external";
  @SerializedName(SERIALIZED_NAME_EXTERNAL)
  private String external;

  public static final String SERIALIZED_NAME_EXTENSION = "extension";
  @SerializedName(SERIALIZED_NAME_EXTENSION)
  private String extension;

  public static final String SERIALIZED_NAME_LOCATION = "location";
  @SerializedName(SERIALIZED_NAME_LOCATION)
  private GetTheDetailsOfASpecificDECTNetworkBaseStation200ResponseHandsetsInnerLinesInnerLocation location;

  /**
   * Indicates handset line member type.
   */
  @JsonAdapter(MemberTypeEnum.Adapter.class)
  public enum MemberTypeEnum {
    PEOPLE("PEOPLE"),
    
    PLACE("PLACE"),
    
    VIRTUAL_LINE("VIRTUAL_LINE");

    private String value;

    MemberTypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static MemberTypeEnum fromValue(String value) {
      for (MemberTypeEnum b : MemberTypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<MemberTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final MemberTypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public MemberTypeEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return MemberTypeEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      MemberTypeEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_MEMBER_TYPE = "memberType";
  @SerializedName(SERIALIZED_NAME_MEMBER_TYPE)
  private MemberTypeEnum memberType;

  public GetTheDetailsOfASpecificDECTNetworkBaseStation200ResponseHandsetsInnerLinesInner() {
  }

  public GetTheDetailsOfASpecificDECTNetworkBaseStation200ResponseHandsetsInnerLinesInner memberId(String memberId) {
    this.memberId = memberId;
    return this;
  }

  /**
   * Unique identifier of the handset line member.
   * @return memberId
   */
  @javax.annotation.Nonnull
  public String getMemberId() {
    return memberId;
  }

  public void setMemberId(String memberId) {
    this.memberId = memberId;
  }


  public GetTheDetailsOfASpecificDECTNetworkBaseStation200ResponseHandsetsInnerLinesInner firstName(String firstName) {
    this.firstName = firstName;
    return this;
  }

  /**
   * First name of handset line member.
   * @return firstName
   */
  @javax.annotation.Nonnull
  public String getFirstName() {
    return firstName;
  }

  public void setFirstName(String firstName) {
    this.firstName = firstName;
  }


  public GetTheDetailsOfASpecificDECTNetworkBaseStation200ResponseHandsetsInnerLinesInner lastName(String lastName) {
    this.lastName = lastName;
    return this;
  }

  /**
   * Last name of handset line member.
   * @return lastName
   */
  @javax.annotation.Nonnull
  public String getLastName() {
    return lastName;
  }

  public void setLastName(String lastName) {
    this.lastName = lastName;
  }


  public GetTheDetailsOfASpecificDECTNetworkBaseStation200ResponseHandsetsInnerLinesInner external(String external) {
    this.external = external;
    return this;
  }

  /**
   * Primary number of handset line member.
   * @return external
   */
  @javax.annotation.Nonnull
  public String getExternal() {
    return external;
  }

  public void setExternal(String external) {
    this.external = external;
  }


  public GetTheDetailsOfASpecificDECTNetworkBaseStation200ResponseHandsetsInnerLinesInner extension(String extension) {
    this.extension = extension;
    return this;
  }

  /**
   * Extension of handset line member.
   * @return extension
   */
  @javax.annotation.Nonnull
  public String getExtension() {
    return extension;
  }

  public void setExtension(String extension) {
    this.extension = extension;
  }


  public GetTheDetailsOfASpecificDECTNetworkBaseStation200ResponseHandsetsInnerLinesInner location(GetTheDetailsOfASpecificDECTNetworkBaseStation200ResponseHandsetsInnerLinesInnerLocation location) {
    this.location = location;
    return this;
  }

  /**
   * Get location
   * @return location
   */
  @javax.annotation.Nonnull
  public GetTheDetailsOfASpecificDECTNetworkBaseStation200ResponseHandsetsInnerLinesInnerLocation getLocation() {
    return location;
  }

  public void setLocation(GetTheDetailsOfASpecificDECTNetworkBaseStation200ResponseHandsetsInnerLinesInnerLocation location) {
    this.location = location;
  }


  public GetTheDetailsOfASpecificDECTNetworkBaseStation200ResponseHandsetsInnerLinesInner memberType(MemberTypeEnum memberType) {
    this.memberType = memberType;
    return this;
  }

  /**
   * Indicates handset line member type.
   * @return memberType
   */
  @javax.annotation.Nonnull
  public MemberTypeEnum getMemberType() {
    return memberType;
  }

  public void setMemberType(MemberTypeEnum memberType) {
    this.memberType = memberType;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GetTheDetailsOfASpecificDECTNetworkBaseStation200ResponseHandsetsInnerLinesInner getTheDetailsOfASpecificDECTNetworkBaseStation200ResponseHandsetsInnerLinesInner = (GetTheDetailsOfASpecificDECTNetworkBaseStation200ResponseHandsetsInnerLinesInner) o;
    return Objects.equals(this.memberId, getTheDetailsOfASpecificDECTNetworkBaseStation200ResponseHandsetsInnerLinesInner.memberId) &&
        Objects.equals(this.firstName, getTheDetailsOfASpecificDECTNetworkBaseStation200ResponseHandsetsInnerLinesInner.firstName) &&
        Objects.equals(this.lastName, getTheDetailsOfASpecificDECTNetworkBaseStation200ResponseHandsetsInnerLinesInner.lastName) &&
        Objects.equals(this.external, getTheDetailsOfASpecificDECTNetworkBaseStation200ResponseHandsetsInnerLinesInner.external) &&
        Objects.equals(this.extension, getTheDetailsOfASpecificDECTNetworkBaseStation200ResponseHandsetsInnerLinesInner.extension) &&
        Objects.equals(this.location, getTheDetailsOfASpecificDECTNetworkBaseStation200ResponseHandsetsInnerLinesInner.location) &&
        Objects.equals(this.memberType, getTheDetailsOfASpecificDECTNetworkBaseStation200ResponseHandsetsInnerLinesInner.memberType);
  }

  @Override
  public int hashCode() {
    return Objects.hash(memberId, firstName, lastName, external, extension, location, memberType);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GetTheDetailsOfASpecificDECTNetworkBaseStation200ResponseHandsetsInnerLinesInner {\n");
    sb.append("    memberId: ").append(toIndentedString(memberId)).append("\n");
    sb.append("    firstName: ").append(toIndentedString(firstName)).append("\n");
    sb.append("    lastName: ").append(toIndentedString(lastName)).append("\n");
    sb.append("    external: ").append(toIndentedString(external)).append("\n");
    sb.append("    extension: ").append(toIndentedString(extension)).append("\n");
    sb.append("    location: ").append(toIndentedString(location)).append("\n");
    sb.append("    memberType: ").append(toIndentedString(memberType)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("memberId");
    openapiFields.add("firstName");
    openapiFields.add("lastName");
    openapiFields.add("external");
    openapiFields.add("extension");
    openapiFields.add("location");
    openapiFields.add("memberType");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("memberId");
    openapiRequiredFields.add("firstName");
    openapiRequiredFields.add("lastName");
    openapiRequiredFields.add("external");
    openapiRequiredFields.add("extension");
    openapiRequiredFields.add("location");
    openapiRequiredFields.add("memberType");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GetTheDetailsOfASpecificDECTNetworkBaseStation200ResponseHandsetsInnerLinesInner
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GetTheDetailsOfASpecificDECTNetworkBaseStation200ResponseHandsetsInnerLinesInner.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GetTheDetailsOfASpecificDECTNetworkBaseStation200ResponseHandsetsInnerLinesInner is not found in the empty JSON string", GetTheDetailsOfASpecificDECTNetworkBaseStation200ResponseHandsetsInnerLinesInner.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GetTheDetailsOfASpecificDECTNetworkBaseStation200ResponseHandsetsInnerLinesInner.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GetTheDetailsOfASpecificDECTNetworkBaseStation200ResponseHandsetsInnerLinesInner` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : GetTheDetailsOfASpecificDECTNetworkBaseStation200ResponseHandsetsInnerLinesInner.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if (!jsonObj.get("memberId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `memberId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("memberId").toString()));
      }
      if (!jsonObj.get("firstName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `firstName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("firstName").toString()));
      }
      if (!jsonObj.get("lastName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `lastName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("lastName").toString()));
      }
      if (!jsonObj.get("external").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `external` to be a primitive type in the JSON string but got `%s`", jsonObj.get("external").toString()));
      }
      if (!jsonObj.get("extension").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `extension` to be a primitive type in the JSON string but got `%s`", jsonObj.get("extension").toString()));
      }
      // validate the required field `location`
      GetTheDetailsOfASpecificDECTNetworkBaseStation200ResponseHandsetsInnerLinesInnerLocation.validateJsonElement(jsonObj.get("location"));
      if (!jsonObj.get("memberType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `memberType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("memberType").toString()));
      }
      // validate the required field `memberType`
      MemberTypeEnum.validateJsonElement(jsonObj.get("memberType"));
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GetTheDetailsOfASpecificDECTNetworkBaseStation200ResponseHandsetsInnerLinesInner.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GetTheDetailsOfASpecificDECTNetworkBaseStation200ResponseHandsetsInnerLinesInner' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GetTheDetailsOfASpecificDECTNetworkBaseStation200ResponseHandsetsInnerLinesInner> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GetTheDetailsOfASpecificDECTNetworkBaseStation200ResponseHandsetsInnerLinesInner.class));

       return (TypeAdapter<T>) new TypeAdapter<GetTheDetailsOfASpecificDECTNetworkBaseStation200ResponseHandsetsInnerLinesInner>() {
           @Override
           public void write(JsonWriter out, GetTheDetailsOfASpecificDECTNetworkBaseStation200ResponseHandsetsInnerLinesInner value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GetTheDetailsOfASpecificDECTNetworkBaseStation200ResponseHandsetsInnerLinesInner read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GetTheDetailsOfASpecificDECTNetworkBaseStation200ResponseHandsetsInnerLinesInner given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GetTheDetailsOfASpecificDECTNetworkBaseStation200ResponseHandsetsInnerLinesInner
   * @throws IOException if the JSON string is invalid with respect to GetTheDetailsOfASpecificDECTNetworkBaseStation200ResponseHandsetsInnerLinesInner
   */
  public static GetTheDetailsOfASpecificDECTNetworkBaseStation200ResponseHandsetsInnerLinesInner fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GetTheDetailsOfASpecificDECTNetworkBaseStation200ResponseHandsetsInnerLinesInner.class);
  }

  /**
   * Convert an instance of GetTheDetailsOfASpecificDECTNetworkBaseStation200ResponseHandsetsInnerLinesInner to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

