// Copyright 2025 Cisco Systems Inc.
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in
// all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
// THE SOFTWARE.

/*
 * All Webex calling API
 * Webex calling API specifications
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * StartJobExecutionStatusObject
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-11-13T15:45:43.258095Z[Europe/Dublin]", comments = "Generator version: 7.9.0")
public class StartJobExecutionStatusObject {
  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private BigDecimal id;

  public static final String SERIALIZED_NAME_START_TIME = "startTime";
  @SerializedName(SERIALIZED_NAME_START_TIME)
  private String startTime;

  public static final String SERIALIZED_NAME_LAST_UPDATED = "lastUpdated";
  @SerializedName(SERIALIZED_NAME_LAST_UPDATED)
  private String lastUpdated;

  public static final String SERIALIZED_NAME_STATUS_MESSAGE = "statusMessage";
  @SerializedName(SERIALIZED_NAME_STATUS_MESSAGE)
  private String statusMessage;

  /**
   * Overall result of the job.
   */
  @JsonAdapter(ExitCodeEnum.Adapter.class)
  public enum ExitCodeEnum {
    UNKNOWN("UNKNOWN"),
    
    COMPLETED("COMPLETED"),
    
    FAILED("FAILED");

    private String value;

    ExitCodeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static ExitCodeEnum fromValue(String value) {
      for (ExitCodeEnum b : ExitCodeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<ExitCodeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final ExitCodeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public ExitCodeEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return ExitCodeEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      ExitCodeEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_EXIT_CODE = "exitCode";
  @SerializedName(SERIALIZED_NAME_EXIT_CODE)
  private ExitCodeEnum exitCode;

  public static final String SERIALIZED_NAME_CREATED_TIME = "createdTime";
  @SerializedName(SERIALIZED_NAME_CREATED_TIME)
  private String createdTime;

  public static final String SERIALIZED_NAME_TIME_ELAPSED = "timeElapsed";
  @SerializedName(SERIALIZED_NAME_TIME_ELAPSED)
  private String timeElapsed;

  public StartJobExecutionStatusObject() {
  }

  public StartJobExecutionStatusObject id(BigDecimal id) {
    this.id = id;
    return this;
  }

  /**
   * Unique identifier for each instance of the job.
   * @return id
   */
  @javax.annotation.Nonnull
  public BigDecimal getId() {
    return id;
  }

  public void setId(BigDecimal id) {
    this.id = id;
  }


  public StartJobExecutionStatusObject startTime(String startTime) {
    this.startTime = startTime;
    return this;
  }

  /**
   * Start date and time of the job in UTC format.
   * @return startTime
   */
  @javax.annotation.Nonnull
  public String getStartTime() {
    return startTime;
  }

  public void setStartTime(String startTime) {
    this.startTime = startTime;
  }


  public StartJobExecutionStatusObject lastUpdated(String lastUpdated) {
    this.lastUpdated = lastUpdated;
    return this;
  }

  /**
   * Last update date and time of the job in UTC format after a step execution completion.
   * @return lastUpdated
   */
  @javax.annotation.Nullable
  public String getLastUpdated() {
    return lastUpdated;
  }

  public void setLastUpdated(String lastUpdated) {
    this.lastUpdated = lastUpdated;
  }


  public StartJobExecutionStatusObject statusMessage(String statusMessage) {
    this.statusMessage = statusMessage;
    return this;
  }

  /**
   * Status for the overall steps that are part of the job.
   * @return statusMessage
   */
  @javax.annotation.Nonnull
  public String getStatusMessage() {
    return statusMessage;
  }

  public void setStatusMessage(String statusMessage) {
    this.statusMessage = statusMessage;
  }


  public StartJobExecutionStatusObject exitCode(ExitCodeEnum exitCode) {
    this.exitCode = exitCode;
    return this;
  }

  /**
   * Overall result of the job.
   * @return exitCode
   */
  @javax.annotation.Nullable
  public ExitCodeEnum getExitCode() {
    return exitCode;
  }

  public void setExitCode(ExitCodeEnum exitCode) {
    this.exitCode = exitCode;
  }


  public StartJobExecutionStatusObject createdTime(String createdTime) {
    this.createdTime = createdTime;
    return this;
  }

  /**
   * Creation date and time of the job in UTC format.
   * @return createdTime
   */
  @javax.annotation.Nonnull
  public String getCreatedTime() {
    return createdTime;
  }

  public void setCreatedTime(String createdTime) {
    this.createdTime = createdTime;
  }


  public StartJobExecutionStatusObject timeElapsed(String timeElapsed) {
    this.timeElapsed = timeElapsed;
    return this;
  }

  /**
   * Time elapsed in seconds since the job execution started.
   * @return timeElapsed
   */
  @javax.annotation.Nullable
  public String getTimeElapsed() {
    return timeElapsed;
  }

  public void setTimeElapsed(String timeElapsed) {
    this.timeElapsed = timeElapsed;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    StartJobExecutionStatusObject startJobExecutionStatusObject = (StartJobExecutionStatusObject) o;
    return Objects.equals(this.id, startJobExecutionStatusObject.id) &&
        Objects.equals(this.startTime, startJobExecutionStatusObject.startTime) &&
        Objects.equals(this.lastUpdated, startJobExecutionStatusObject.lastUpdated) &&
        Objects.equals(this.statusMessage, startJobExecutionStatusObject.statusMessage) &&
        Objects.equals(this.exitCode, startJobExecutionStatusObject.exitCode) &&
        Objects.equals(this.createdTime, startJobExecutionStatusObject.createdTime) &&
        Objects.equals(this.timeElapsed, startJobExecutionStatusObject.timeElapsed);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, startTime, lastUpdated, statusMessage, exitCode, createdTime, timeElapsed);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class StartJobExecutionStatusObject {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    startTime: ").append(toIndentedString(startTime)).append("\n");
    sb.append("    lastUpdated: ").append(toIndentedString(lastUpdated)).append("\n");
    sb.append("    statusMessage: ").append(toIndentedString(statusMessage)).append("\n");
    sb.append("    exitCode: ").append(toIndentedString(exitCode)).append("\n");
    sb.append("    createdTime: ").append(toIndentedString(createdTime)).append("\n");
    sb.append("    timeElapsed: ").append(toIndentedString(timeElapsed)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("id");
    openapiFields.add("startTime");
    openapiFields.add("lastUpdated");
    openapiFields.add("statusMessage");
    openapiFields.add("exitCode");
    openapiFields.add("createdTime");
    openapiFields.add("timeElapsed");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("id");
    openapiRequiredFields.add("startTime");
    openapiRequiredFields.add("statusMessage");
    openapiRequiredFields.add("createdTime");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to StartJobExecutionStatusObject
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!StartJobExecutionStatusObject.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in StartJobExecutionStatusObject is not found in the empty JSON string", StartJobExecutionStatusObject.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!StartJobExecutionStatusObject.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `StartJobExecutionStatusObject` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : StartJobExecutionStatusObject.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if (!jsonObj.get("startTime").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `startTime` to be a primitive type in the JSON string but got `%s`", jsonObj.get("startTime").toString()));
      }
      if ((jsonObj.get("lastUpdated") != null && !jsonObj.get("lastUpdated").isJsonNull()) && !jsonObj.get("lastUpdated").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `lastUpdated` to be a primitive type in the JSON string but got `%s`", jsonObj.get("lastUpdated").toString()));
      }
      if (!jsonObj.get("statusMessage").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `statusMessage` to be a primitive type in the JSON string but got `%s`", jsonObj.get("statusMessage").toString()));
      }
      if ((jsonObj.get("exitCode") != null && !jsonObj.get("exitCode").isJsonNull()) && !jsonObj.get("exitCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `exitCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("exitCode").toString()));
      }
      // validate the optional field `exitCode`
      if (jsonObj.get("exitCode") != null && !jsonObj.get("exitCode").isJsonNull()) {
        ExitCodeEnum.validateJsonElement(jsonObj.get("exitCode"));
      }
      if (!jsonObj.get("createdTime").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `createdTime` to be a primitive type in the JSON string but got `%s`", jsonObj.get("createdTime").toString()));
      }
      if ((jsonObj.get("timeElapsed") != null && !jsonObj.get("timeElapsed").isJsonNull()) && !jsonObj.get("timeElapsed").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `timeElapsed` to be a primitive type in the JSON string but got `%s`", jsonObj.get("timeElapsed").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!StartJobExecutionStatusObject.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'StartJobExecutionStatusObject' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<StartJobExecutionStatusObject> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(StartJobExecutionStatusObject.class));

       return (TypeAdapter<T>) new TypeAdapter<StartJobExecutionStatusObject>() {
           @Override
           public void write(JsonWriter out, StartJobExecutionStatusObject value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public StartJobExecutionStatusObject read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of StartJobExecutionStatusObject given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of StartJobExecutionStatusObject
   * @throws IOException if the JSON string is invalid with respect to StartJobExecutionStatusObject
   */
  public static StartJobExecutionStatusObject fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, StartJobExecutionStatusObject.class);
  }

  /**
   * Convert an instance of StartJobExecutionStatusObject to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

