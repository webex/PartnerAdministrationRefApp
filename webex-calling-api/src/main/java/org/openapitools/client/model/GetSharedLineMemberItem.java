// Copyright 2025 Cisco Systems Inc.
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in
// all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
// THE SOFTWARE.

/*
 * All Webex calling API
 * Webex calling API specifications
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.Arrays;
import org.openapitools.client.model.LineType;
import org.openapitools.client.model.Location;
import org.openapitools.client.model.UserType;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * GetSharedLineMemberItem
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-11-13T15:45:43.258095Z[Europe/Dublin]", comments = "Generator version: 7.9.0")
public class GetSharedLineMemberItem {
  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_FIRST_NAME = "firstName";
  @SerializedName(SERIALIZED_NAME_FIRST_NAME)
  private String firstName;

  public static final String SERIALIZED_NAME_LAST_NAME = "lastName";
  @SerializedName(SERIALIZED_NAME_LAST_NAME)
  private String lastName;

  public static final String SERIALIZED_NAME_PHONE_NUMBER = "phoneNumber";
  @SerializedName(SERIALIZED_NAME_PHONE_NUMBER)
  private String phoneNumber;

  public static final String SERIALIZED_NAME_EXTENSION = "extension";
  @SerializedName(SERIALIZED_NAME_EXTENSION)
  private String extension;

  public static final String SERIALIZED_NAME_ROUTING_PREFIX = "routingPrefix";
  @SerializedName(SERIALIZED_NAME_ROUTING_PREFIX)
  private String routingPrefix;

  public static final String SERIALIZED_NAME_ESN = "esn";
  @SerializedName(SERIALIZED_NAME_ESN)
  private String esn;

  public static final String SERIALIZED_NAME_PORT = "port";
  @SerializedName(SERIALIZED_NAME_PORT)
  private BigDecimal port;

  public static final String SERIALIZED_NAME_T38_FAX_COMPRESSION_ENABLED_BACKTICK_TRUE_BACKTICK = "t38FaxCompressionEnabled &#x60;true&#x60;";
  @SerializedName(SERIALIZED_NAME_T38_FAX_COMPRESSION_ENABLED_BACKTICK_TRUE_BACKTICK)
  private Boolean t38FaxCompressionEnabledBacktickTrueBacktick;

  public static final String SERIALIZED_NAME_PRIMARY_OWNER = "primaryOwner";
  @SerializedName(SERIALIZED_NAME_PRIMARY_OWNER)
  private String primaryOwner;

  public static final String SERIALIZED_NAME_LINE_TYPE = "lineType";
  @SerializedName(SERIALIZED_NAME_LINE_TYPE)
  private LineType lineType;

  public static final String SERIALIZED_NAME_LINE_WEIGHT = "lineWeight";
  @SerializedName(SERIALIZED_NAME_LINE_WEIGHT)
  private BigDecimal lineWeight;

  public static final String SERIALIZED_NAME_HOST_I_P = "hostIP";
  @SerializedName(SERIALIZED_NAME_HOST_I_P)
  private String hostIP;

  public static final String SERIALIZED_NAME_REMOTE_I_P = "remoteIP";
  @SerializedName(SERIALIZED_NAME_REMOTE_I_P)
  private String remoteIP;

  public static final String SERIALIZED_NAME_HOTLINE_ENABLED = "hotlineEnabled";
  @SerializedName(SERIALIZED_NAME_HOTLINE_ENABLED)
  private Boolean hotlineEnabled;

  public static final String SERIALIZED_NAME_HOTLINE_DESTINATION = "hotlineDestination";
  @SerializedName(SERIALIZED_NAME_HOTLINE_DESTINATION)
  private String hotlineDestination;

  public static final String SERIALIZED_NAME_ALLOW_CALL_DECLINE_ENABLED = "allowCallDeclineEnabled";
  @SerializedName(SERIALIZED_NAME_ALLOW_CALL_DECLINE_ENABLED)
  private Boolean allowCallDeclineEnabled;

  public static final String SERIALIZED_NAME_LINE_LABEL = "lineLabel";
  @SerializedName(SERIALIZED_NAME_LINE_LABEL)
  private String lineLabel;

  public static final String SERIALIZED_NAME_MEMBER_TYPE = "memberType";
  @SerializedName(SERIALIZED_NAME_MEMBER_TYPE)
  private UserType memberType;

  public static final String SERIALIZED_NAME_LOCATION = "location";
  @SerializedName(SERIALIZED_NAME_LOCATION)
  private Location location;

  public GetSharedLineMemberItem() {
  }

  public GetSharedLineMemberItem id(String id) {
    this.id = id;
    return this;
  }

  /**
   * Unique identifier for the member.
   * @return id
   */
  @javax.annotation.Nonnull
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }


  public GetSharedLineMemberItem firstName(String firstName) {
    this.firstName = firstName;
    return this;
  }

  /**
   * First name of person or workspace.
   * @return firstName
   */
  @javax.annotation.Nonnull
  public String getFirstName() {
    return firstName;
  }

  public void setFirstName(String firstName) {
    this.firstName = firstName;
  }


  public GetSharedLineMemberItem lastName(String lastName) {
    this.lastName = lastName;
    return this;
  }

  /**
   * Last name of person or workspace.
   * @return lastName
   */
  @javax.annotation.Nonnull
  public String getLastName() {
    return lastName;
  }

  public void setLastName(String lastName) {
    this.lastName = lastName;
  }


  public GetSharedLineMemberItem phoneNumber(String phoneNumber) {
    this.phoneNumber = phoneNumber;
    return this;
  }

  /**
   * Phone number of a person or workspace. Currently, E.164 format is not supported. This will be supported in the future update.
   * @return phoneNumber
   */
  @javax.annotation.Nullable
  public String getPhoneNumber() {
    return phoneNumber;
  }

  public void setPhoneNumber(String phoneNumber) {
    this.phoneNumber = phoneNumber;
  }


  public GetSharedLineMemberItem extension(String extension) {
    this.extension = extension;
    return this;
  }

  /**
   * Phone extension of a person or workspace.
   * @return extension
   */
  @javax.annotation.Nullable
  public String getExtension() {
    return extension;
  }

  public void setExtension(String extension) {
    this.extension = extension;
  }


  public GetSharedLineMemberItem routingPrefix(String routingPrefix) {
    this.routingPrefix = routingPrefix;
    return this;
  }

  /**
   * Routing prefix of location.
   * @return routingPrefix
   */
  @javax.annotation.Nullable
  public String getRoutingPrefix() {
    return routingPrefix;
  }

  public void setRoutingPrefix(String routingPrefix) {
    this.routingPrefix = routingPrefix;
  }


  public GetSharedLineMemberItem esn(String esn) {
    this.esn = esn;
    return this;
  }

  /**
   * Routing prefix + extension of a person or workspace.
   * @return esn
   */
  @javax.annotation.Nullable
  public String getEsn() {
    return esn;
  }

  public void setEsn(String esn) {
    this.esn = esn;
  }


  public GetSharedLineMemberItem port(BigDecimal port) {
    this.port = port;
    return this;
  }

  /**
   * Device port number assigned to a person or workspace.
   * @return port
   */
  @javax.annotation.Nonnull
  public BigDecimal getPort() {
    return port;
  }

  public void setPort(BigDecimal port) {
    this.port = port;
  }


  public GetSharedLineMemberItem t38FaxCompressionEnabledBacktickTrueBacktick(Boolean t38FaxCompressionEnabledBacktickTrueBacktick) {
    this.t38FaxCompressionEnabledBacktickTrueBacktick = t38FaxCompressionEnabledBacktickTrueBacktick;
    return this;
  }

  /**
   * T.38 Fax Compression setting. Valid only for ATA Devices. Overrides user level compression options.
   * @return t38FaxCompressionEnabledBacktickTrueBacktick
   */
  @javax.annotation.Nullable
  public Boolean getT38FaxCompressionEnabledBacktickTrueBacktick() {
    return t38FaxCompressionEnabledBacktickTrueBacktick;
  }

  public void setT38FaxCompressionEnabledBacktickTrueBacktick(Boolean t38FaxCompressionEnabledBacktickTrueBacktick) {
    this.t38FaxCompressionEnabledBacktickTrueBacktick = t38FaxCompressionEnabledBacktickTrueBacktick;
  }


  public GetSharedLineMemberItem primaryOwner(String primaryOwner) {
    this.primaryOwner = primaryOwner;
    return this;
  }

  /**
   * If &#x60;true&#x60; the person or the workspace is the owner of the device. Points to primary line/port of the device.
   * @return primaryOwner
   */
  @javax.annotation.Nonnull
  public String getPrimaryOwner() {
    return primaryOwner;
  }

  public void setPrimaryOwner(String primaryOwner) {
    this.primaryOwner = primaryOwner;
  }


  public GetSharedLineMemberItem lineType(LineType lineType) {
    this.lineType = lineType;
    return this;
  }

  /**
   * Indicates if the line is acting as a primary line or a shared line for this device.
   * @return lineType
   */
  @javax.annotation.Nonnull
  public LineType getLineType() {
    return lineType;
  }

  public void setLineType(LineType lineType) {
    this.lineType = lineType;
  }


  public GetSharedLineMemberItem lineWeight(BigDecimal lineWeight) {
    this.lineWeight = lineWeight;
    return this;
  }

  /**
   * Number of lines that have been configured for the person on the device.
   * @return lineWeight
   */
  @javax.annotation.Nonnull
  public BigDecimal getLineWeight() {
    return lineWeight;
  }

  public void setLineWeight(BigDecimal lineWeight) {
    this.lineWeight = lineWeight;
  }


  public GetSharedLineMemberItem hostIP(String hostIP) {
    this.hostIP = hostIP;
    return this;
  }

  /**
   * Registration home IP for the line port.
   * @return hostIP
   */
  @javax.annotation.Nullable
  public String getHostIP() {
    return hostIP;
  }

  public void setHostIP(String hostIP) {
    this.hostIP = hostIP;
  }


  public GetSharedLineMemberItem remoteIP(String remoteIP) {
    this.remoteIP = remoteIP;
    return this;
  }

  /**
   * Registration remote IP for the line port.
   * @return remoteIP
   */
  @javax.annotation.Nullable
  public String getRemoteIP() {
    return remoteIP;
  }

  public void setRemoteIP(String remoteIP) {
    this.remoteIP = remoteIP;
  }


  public GetSharedLineMemberItem hotlineEnabled(Boolean hotlineEnabled) {
    this.hotlineEnabled = hotlineEnabled;
    return this;
  }

  /**
   * Configure this line to automatically call a predefined number whenever taken off-hook. Once enabled, the line can only make calls to the predefined number set in hotlineDestination.
   * @return hotlineEnabled
   */
  @javax.annotation.Nonnull
  public Boolean getHotlineEnabled() {
    return hotlineEnabled;
  }

  public void setHotlineEnabled(Boolean hotlineEnabled) {
    this.hotlineEnabled = hotlineEnabled;
  }


  public GetSharedLineMemberItem hotlineDestination(String hotlineDestination) {
    this.hotlineDestination = hotlineDestination;
    return this;
  }

  /**
   * Preconfigured number for the hotline. Required only if &#x60;hotlineEnabled&#x60; is set to &#x60;true&#x60;.
   * @return hotlineDestination
   */
  @javax.annotation.Nonnull
  public String getHotlineDestination() {
    return hotlineDestination;
  }

  public void setHotlineDestination(String hotlineDestination) {
    this.hotlineDestination = hotlineDestination;
  }


  public GetSharedLineMemberItem allowCallDeclineEnabled(Boolean allowCallDeclineEnabled) {
    this.allowCallDeclineEnabled = allowCallDeclineEnabled;
    return this;
  }

  /**
   * Set how a device behaves when a call is declined. When set to &#x60;true&#x60;, a call decline request is extended to all the endpoints on the device. When set to &#x60;false&#x60;, a call decline request is only declined at the current endpoint.
   * @return allowCallDeclineEnabled
   */
  @javax.annotation.Nonnull
  public Boolean getAllowCallDeclineEnabled() {
    return allowCallDeclineEnabled;
  }

  public void setAllowCallDeclineEnabled(Boolean allowCallDeclineEnabled) {
    this.allowCallDeclineEnabled = allowCallDeclineEnabled;
  }


  public GetSharedLineMemberItem lineLabel(String lineLabel) {
    this.lineLabel = lineLabel;
    return this;
  }

  /**
   * Device line label.
   * @return lineLabel
   */
  @javax.annotation.Nullable
  public String getLineLabel() {
    return lineLabel;
  }

  public void setLineLabel(String lineLabel) {
    this.lineLabel = lineLabel;
  }


  public GetSharedLineMemberItem memberType(UserType memberType) {
    this.memberType = memberType;
    return this;
  }

  /**
   * Get memberType
   * @return memberType
   */
  @javax.annotation.Nonnull
  public UserType getMemberType() {
    return memberType;
  }

  public void setMemberType(UserType memberType) {
    this.memberType = memberType;
  }


  public GetSharedLineMemberItem location(Location location) {
    this.location = location;
    return this;
  }

  /**
   * Get location
   * @return location
   */
  @javax.annotation.Nullable
  public Location getLocation() {
    return location;
  }

  public void setLocation(Location location) {
    this.location = location;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GetSharedLineMemberItem getSharedLineMemberItem = (GetSharedLineMemberItem) o;
    return Objects.equals(this.id, getSharedLineMemberItem.id) &&
        Objects.equals(this.firstName, getSharedLineMemberItem.firstName) &&
        Objects.equals(this.lastName, getSharedLineMemberItem.lastName) &&
        Objects.equals(this.phoneNumber, getSharedLineMemberItem.phoneNumber) &&
        Objects.equals(this.extension, getSharedLineMemberItem.extension) &&
        Objects.equals(this.routingPrefix, getSharedLineMemberItem.routingPrefix) &&
        Objects.equals(this.esn, getSharedLineMemberItem.esn) &&
        Objects.equals(this.port, getSharedLineMemberItem.port) &&
        Objects.equals(this.t38FaxCompressionEnabledBacktickTrueBacktick, getSharedLineMemberItem.t38FaxCompressionEnabledBacktickTrueBacktick) &&
        Objects.equals(this.primaryOwner, getSharedLineMemberItem.primaryOwner) &&
        Objects.equals(this.lineType, getSharedLineMemberItem.lineType) &&
        Objects.equals(this.lineWeight, getSharedLineMemberItem.lineWeight) &&
        Objects.equals(this.hostIP, getSharedLineMemberItem.hostIP) &&
        Objects.equals(this.remoteIP, getSharedLineMemberItem.remoteIP) &&
        Objects.equals(this.hotlineEnabled, getSharedLineMemberItem.hotlineEnabled) &&
        Objects.equals(this.hotlineDestination, getSharedLineMemberItem.hotlineDestination) &&
        Objects.equals(this.allowCallDeclineEnabled, getSharedLineMemberItem.allowCallDeclineEnabled) &&
        Objects.equals(this.lineLabel, getSharedLineMemberItem.lineLabel) &&
        Objects.equals(this.memberType, getSharedLineMemberItem.memberType) &&
        Objects.equals(this.location, getSharedLineMemberItem.location);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, firstName, lastName, phoneNumber, extension, routingPrefix, esn, port, t38FaxCompressionEnabledBacktickTrueBacktick, primaryOwner, lineType, lineWeight, hostIP, remoteIP, hotlineEnabled, hotlineDestination, allowCallDeclineEnabled, lineLabel, memberType, location);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GetSharedLineMemberItem {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    firstName: ").append(toIndentedString(firstName)).append("\n");
    sb.append("    lastName: ").append(toIndentedString(lastName)).append("\n");
    sb.append("    phoneNumber: ").append(toIndentedString(phoneNumber)).append("\n");
    sb.append("    extension: ").append(toIndentedString(extension)).append("\n");
    sb.append("    routingPrefix: ").append(toIndentedString(routingPrefix)).append("\n");
    sb.append("    esn: ").append(toIndentedString(esn)).append("\n");
    sb.append("    port: ").append(toIndentedString(port)).append("\n");
    sb.append("    t38FaxCompressionEnabledBacktickTrueBacktick: ").append(toIndentedString(t38FaxCompressionEnabledBacktickTrueBacktick)).append("\n");
    sb.append("    primaryOwner: ").append(toIndentedString(primaryOwner)).append("\n");
    sb.append("    lineType: ").append(toIndentedString(lineType)).append("\n");
    sb.append("    lineWeight: ").append(toIndentedString(lineWeight)).append("\n");
    sb.append("    hostIP: ").append(toIndentedString(hostIP)).append("\n");
    sb.append("    remoteIP: ").append(toIndentedString(remoteIP)).append("\n");
    sb.append("    hotlineEnabled: ").append(toIndentedString(hotlineEnabled)).append("\n");
    sb.append("    hotlineDestination: ").append(toIndentedString(hotlineDestination)).append("\n");
    sb.append("    allowCallDeclineEnabled: ").append(toIndentedString(allowCallDeclineEnabled)).append("\n");
    sb.append("    lineLabel: ").append(toIndentedString(lineLabel)).append("\n");
    sb.append("    memberType: ").append(toIndentedString(memberType)).append("\n");
    sb.append("    location: ").append(toIndentedString(location)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("id");
    openapiFields.add("firstName");
    openapiFields.add("lastName");
    openapiFields.add("phoneNumber");
    openapiFields.add("extension");
    openapiFields.add("routingPrefix");
    openapiFields.add("esn");
    openapiFields.add("port");
    openapiFields.add("t38FaxCompressionEnabled &#x60;true&#x60;");
    openapiFields.add("primaryOwner");
    openapiFields.add("lineType");
    openapiFields.add("lineWeight");
    openapiFields.add("hostIP");
    openapiFields.add("remoteIP");
    openapiFields.add("hotlineEnabled");
    openapiFields.add("hotlineDestination");
    openapiFields.add("allowCallDeclineEnabled");
    openapiFields.add("lineLabel");
    openapiFields.add("memberType");
    openapiFields.add("location");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("id");
    openapiRequiredFields.add("firstName");
    openapiRequiredFields.add("lastName");
    openapiRequiredFields.add("port");
    openapiRequiredFields.add("primaryOwner");
    openapiRequiredFields.add("lineType");
    openapiRequiredFields.add("lineWeight");
    openapiRequiredFields.add("hotlineEnabled");
    openapiRequiredFields.add("hotlineDestination");
    openapiRequiredFields.add("allowCallDeclineEnabled");
    openapiRequiredFields.add("memberType");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GetSharedLineMemberItem
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GetSharedLineMemberItem.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GetSharedLineMemberItem is not found in the empty JSON string", GetSharedLineMemberItem.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GetSharedLineMemberItem.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GetSharedLineMemberItem` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : GetSharedLineMemberItem.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if (!jsonObj.get("id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("id").toString()));
      }
      if (!jsonObj.get("firstName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `firstName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("firstName").toString()));
      }
      if (!jsonObj.get("lastName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `lastName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("lastName").toString()));
      }
      if ((jsonObj.get("phoneNumber") != null && !jsonObj.get("phoneNumber").isJsonNull()) && !jsonObj.get("phoneNumber").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `phoneNumber` to be a primitive type in the JSON string but got `%s`", jsonObj.get("phoneNumber").toString()));
      }
      if ((jsonObj.get("extension") != null && !jsonObj.get("extension").isJsonNull()) && !jsonObj.get("extension").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `extension` to be a primitive type in the JSON string but got `%s`", jsonObj.get("extension").toString()));
      }
      if ((jsonObj.get("routingPrefix") != null && !jsonObj.get("routingPrefix").isJsonNull()) && !jsonObj.get("routingPrefix").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `routingPrefix` to be a primitive type in the JSON string but got `%s`", jsonObj.get("routingPrefix").toString()));
      }
      if ((jsonObj.get("esn") != null && !jsonObj.get("esn").isJsonNull()) && !jsonObj.get("esn").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `esn` to be a primitive type in the JSON string but got `%s`", jsonObj.get("esn").toString()));
      }
      if (!jsonObj.get("primaryOwner").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `primaryOwner` to be a primitive type in the JSON string but got `%s`", jsonObj.get("primaryOwner").toString()));
      }
      // validate the required field `lineType`
      LineType.validateJsonElement(jsonObj.get("lineType"));
      if ((jsonObj.get("hostIP") != null && !jsonObj.get("hostIP").isJsonNull()) && !jsonObj.get("hostIP").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `hostIP` to be a primitive type in the JSON string but got `%s`", jsonObj.get("hostIP").toString()));
      }
      if ((jsonObj.get("remoteIP") != null && !jsonObj.get("remoteIP").isJsonNull()) && !jsonObj.get("remoteIP").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `remoteIP` to be a primitive type in the JSON string but got `%s`", jsonObj.get("remoteIP").toString()));
      }
      if (!jsonObj.get("hotlineDestination").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `hotlineDestination` to be a primitive type in the JSON string but got `%s`", jsonObj.get("hotlineDestination").toString()));
      }
      if ((jsonObj.get("lineLabel") != null && !jsonObj.get("lineLabel").isJsonNull()) && !jsonObj.get("lineLabel").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `lineLabel` to be a primitive type in the JSON string but got `%s`", jsonObj.get("lineLabel").toString()));
      }
      // validate the required field `memberType`
      UserType.validateJsonElement(jsonObj.get("memberType"));
      // validate the optional field `location`
      if (jsonObj.get("location") != null && !jsonObj.get("location").isJsonNull()) {
        Location.validateJsonElement(jsonObj.get("location"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GetSharedLineMemberItem.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GetSharedLineMemberItem' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GetSharedLineMemberItem> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GetSharedLineMemberItem.class));

       return (TypeAdapter<T>) new TypeAdapter<GetSharedLineMemberItem>() {
           @Override
           public void write(JsonWriter out, GetSharedLineMemberItem value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GetSharedLineMemberItem read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GetSharedLineMemberItem given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GetSharedLineMemberItem
   * @throws IOException if the JSON string is invalid with respect to GetSharedLineMemberItem
   */
  public static GetSharedLineMemberItem fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GetSharedLineMemberItem.class);
  }

  /**
   * Convert an instance of GetSharedLineMemberItem to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

