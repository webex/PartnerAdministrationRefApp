// Copyright 2025 Cisco Systems Inc.
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in
// all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
// THE SOFTWARE.

/*
 * All Webex calling API
 * Webex calling API specifications
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.Arrays;
import org.openapitools.client.model.CallQueueQueueSettingsGetObjectComfortMessage;
import org.openapitools.client.model.CallQueueQueueSettingsGetObjectComfortMessageBypass;
import org.openapitools.client.model.CallQueueQueueSettingsGetObjectMohMessage;
import org.openapitools.client.model.CallQueueQueueSettingsGetObjectOverflow;
import org.openapitools.client.model.CallQueueQueueSettingsGetObjectWaitMessage;
import org.openapitools.client.model.CallQueueQueueSettingsGetObjectWelcomeMessage;
import org.openapitools.client.model.CallQueueQueueSettingsGetObjectWhisperMessage;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * CallQueueQueueSettingsGetObject
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-11-13T15:45:43.258095Z[Europe/Dublin]", comments = "Generator version: 7.9.0")
public class CallQueueQueueSettingsGetObject {
  public static final String SERIALIZED_NAME_QUEUE_SIZE = "queueSize";
  @SerializedName(SERIALIZED_NAME_QUEUE_SIZE)
  private BigDecimal queueSize;

  public static final String SERIALIZED_NAME_CALL_OFFER_TONE_ENABLED = "callOfferToneEnabled";
  @SerializedName(SERIALIZED_NAME_CALL_OFFER_TONE_ENABLED)
  private Boolean callOfferToneEnabled;

  public static final String SERIALIZED_NAME_RESET_CALL_STATISTICS_ENABLED = "resetCallStatisticsEnabled";
  @SerializedName(SERIALIZED_NAME_RESET_CALL_STATISTICS_ENABLED)
  private Boolean resetCallStatisticsEnabled;

  public static final String SERIALIZED_NAME_OVERFLOW = "overflow";
  @SerializedName(SERIALIZED_NAME_OVERFLOW)
  private CallQueueQueueSettingsGetObjectOverflow overflow;

  public static final String SERIALIZED_NAME_WELCOME_MESSAGE = "welcomeMessage";
  @SerializedName(SERIALIZED_NAME_WELCOME_MESSAGE)
  private CallQueueQueueSettingsGetObjectWelcomeMessage welcomeMessage;

  public static final String SERIALIZED_NAME_WAIT_MESSAGE = "waitMessage";
  @SerializedName(SERIALIZED_NAME_WAIT_MESSAGE)
  private CallQueueQueueSettingsGetObjectWaitMessage waitMessage;

  public static final String SERIALIZED_NAME_COMFORT_MESSAGE = "comfortMessage";
  @SerializedName(SERIALIZED_NAME_COMFORT_MESSAGE)
  private CallQueueQueueSettingsGetObjectComfortMessage comfortMessage;

  public static final String SERIALIZED_NAME_COMFORT_MESSAGE_BYPASS = "comfortMessageBypass";
  @SerializedName(SERIALIZED_NAME_COMFORT_MESSAGE_BYPASS)
  private CallQueueQueueSettingsGetObjectComfortMessageBypass comfortMessageBypass;

  public static final String SERIALIZED_NAME_MOH_MESSAGE = "mohMessage";
  @SerializedName(SERIALIZED_NAME_MOH_MESSAGE)
  private CallQueueQueueSettingsGetObjectMohMessage mohMessage;

  public static final String SERIALIZED_NAME_WHISPER_MESSAGE = "whisperMessage";
  @SerializedName(SERIALIZED_NAME_WHISPER_MESSAGE)
  private CallQueueQueueSettingsGetObjectWhisperMessage whisperMessage;

  public CallQueueQueueSettingsGetObject() {
  }

  public CallQueueQueueSettingsGetObject queueSize(BigDecimal queueSize) {
    this.queueSize = queueSize;
    return this;
  }

  /**
   * The maximum number of calls for this call queue. Once this number is reached, the &#x60;overflow&#x60; settings are triggered.
   * @return queueSize
   */
  @javax.annotation.Nonnull
  public BigDecimal getQueueSize() {
    return queueSize;
  }

  public void setQueueSize(BigDecimal queueSize) {
    this.queueSize = queueSize;
  }


  public CallQueueQueueSettingsGetObject callOfferToneEnabled(Boolean callOfferToneEnabled) {
    this.callOfferToneEnabled = callOfferToneEnabled;
    return this;
  }

  /**
   * Play ringing tone to callers when their call is set to an available agent.
   * @return callOfferToneEnabled
   */
  @javax.annotation.Nullable
  public Boolean getCallOfferToneEnabled() {
    return callOfferToneEnabled;
  }

  public void setCallOfferToneEnabled(Boolean callOfferToneEnabled) {
    this.callOfferToneEnabled = callOfferToneEnabled;
  }


  public CallQueueQueueSettingsGetObject resetCallStatisticsEnabled(Boolean resetCallStatisticsEnabled) {
    this.resetCallStatisticsEnabled = resetCallStatisticsEnabled;
    return this;
  }

  /**
   * Reset caller statistics upon queue entry.
   * @return resetCallStatisticsEnabled
   */
  @javax.annotation.Nullable
  public Boolean getResetCallStatisticsEnabled() {
    return resetCallStatisticsEnabled;
  }

  public void setResetCallStatisticsEnabled(Boolean resetCallStatisticsEnabled) {
    this.resetCallStatisticsEnabled = resetCallStatisticsEnabled;
  }


  public CallQueueQueueSettingsGetObject overflow(CallQueueQueueSettingsGetObjectOverflow overflow) {
    this.overflow = overflow;
    return this;
  }

  /**
   * Get overflow
   * @return overflow
   */
  @javax.annotation.Nonnull
  public CallQueueQueueSettingsGetObjectOverflow getOverflow() {
    return overflow;
  }

  public void setOverflow(CallQueueQueueSettingsGetObjectOverflow overflow) {
    this.overflow = overflow;
  }


  public CallQueueQueueSettingsGetObject welcomeMessage(CallQueueQueueSettingsGetObjectWelcomeMessage welcomeMessage) {
    this.welcomeMessage = welcomeMessage;
    return this;
  }

  /**
   * Get welcomeMessage
   * @return welcomeMessage
   */
  @javax.annotation.Nullable
  public CallQueueQueueSettingsGetObjectWelcomeMessage getWelcomeMessage() {
    return welcomeMessage;
  }

  public void setWelcomeMessage(CallQueueQueueSettingsGetObjectWelcomeMessage welcomeMessage) {
    this.welcomeMessage = welcomeMessage;
  }


  public CallQueueQueueSettingsGetObject waitMessage(CallQueueQueueSettingsGetObjectWaitMessage waitMessage) {
    this.waitMessage = waitMessage;
    return this;
  }

  /**
   * Get waitMessage
   * @return waitMessage
   */
  @javax.annotation.Nullable
  public CallQueueQueueSettingsGetObjectWaitMessage getWaitMessage() {
    return waitMessage;
  }

  public void setWaitMessage(CallQueueQueueSettingsGetObjectWaitMessage waitMessage) {
    this.waitMessage = waitMessage;
  }


  public CallQueueQueueSettingsGetObject comfortMessage(CallQueueQueueSettingsGetObjectComfortMessage comfortMessage) {
    this.comfortMessage = comfortMessage;
    return this;
  }

  /**
   * Get comfortMessage
   * @return comfortMessage
   */
  @javax.annotation.Nullable
  public CallQueueQueueSettingsGetObjectComfortMessage getComfortMessage() {
    return comfortMessage;
  }

  public void setComfortMessage(CallQueueQueueSettingsGetObjectComfortMessage comfortMessage) {
    this.comfortMessage = comfortMessage;
  }


  public CallQueueQueueSettingsGetObject comfortMessageBypass(CallQueueQueueSettingsGetObjectComfortMessageBypass comfortMessageBypass) {
    this.comfortMessageBypass = comfortMessageBypass;
    return this;
  }

  /**
   * Get comfortMessageBypass
   * @return comfortMessageBypass
   */
  @javax.annotation.Nullable
  public CallQueueQueueSettingsGetObjectComfortMessageBypass getComfortMessageBypass() {
    return comfortMessageBypass;
  }

  public void setComfortMessageBypass(CallQueueQueueSettingsGetObjectComfortMessageBypass comfortMessageBypass) {
    this.comfortMessageBypass = comfortMessageBypass;
  }


  public CallQueueQueueSettingsGetObject mohMessage(CallQueueQueueSettingsGetObjectMohMessage mohMessage) {
    this.mohMessage = mohMessage;
    return this;
  }

  /**
   * Get mohMessage
   * @return mohMessage
   */
  @javax.annotation.Nullable
  public CallQueueQueueSettingsGetObjectMohMessage getMohMessage() {
    return mohMessage;
  }

  public void setMohMessage(CallQueueQueueSettingsGetObjectMohMessage mohMessage) {
    this.mohMessage = mohMessage;
  }


  public CallQueueQueueSettingsGetObject whisperMessage(CallQueueQueueSettingsGetObjectWhisperMessage whisperMessage) {
    this.whisperMessage = whisperMessage;
    return this;
  }

  /**
   * Get whisperMessage
   * @return whisperMessage
   */
  @javax.annotation.Nullable
  public CallQueueQueueSettingsGetObjectWhisperMessage getWhisperMessage() {
    return whisperMessage;
  }

  public void setWhisperMessage(CallQueueQueueSettingsGetObjectWhisperMessage whisperMessage) {
    this.whisperMessage = whisperMessage;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CallQueueQueueSettingsGetObject callQueueQueueSettingsGetObject = (CallQueueQueueSettingsGetObject) o;
    return Objects.equals(this.queueSize, callQueueQueueSettingsGetObject.queueSize) &&
        Objects.equals(this.callOfferToneEnabled, callQueueQueueSettingsGetObject.callOfferToneEnabled) &&
        Objects.equals(this.resetCallStatisticsEnabled, callQueueQueueSettingsGetObject.resetCallStatisticsEnabled) &&
        Objects.equals(this.overflow, callQueueQueueSettingsGetObject.overflow) &&
        Objects.equals(this.welcomeMessage, callQueueQueueSettingsGetObject.welcomeMessage) &&
        Objects.equals(this.waitMessage, callQueueQueueSettingsGetObject.waitMessage) &&
        Objects.equals(this.comfortMessage, callQueueQueueSettingsGetObject.comfortMessage) &&
        Objects.equals(this.comfortMessageBypass, callQueueQueueSettingsGetObject.comfortMessageBypass) &&
        Objects.equals(this.mohMessage, callQueueQueueSettingsGetObject.mohMessage) &&
        Objects.equals(this.whisperMessage, callQueueQueueSettingsGetObject.whisperMessage);
  }

  @Override
  public int hashCode() {
    return Objects.hash(queueSize, callOfferToneEnabled, resetCallStatisticsEnabled, overflow, welcomeMessage, waitMessage, comfortMessage, comfortMessageBypass, mohMessage, whisperMessage);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CallQueueQueueSettingsGetObject {\n");
    sb.append("    queueSize: ").append(toIndentedString(queueSize)).append("\n");
    sb.append("    callOfferToneEnabled: ").append(toIndentedString(callOfferToneEnabled)).append("\n");
    sb.append("    resetCallStatisticsEnabled: ").append(toIndentedString(resetCallStatisticsEnabled)).append("\n");
    sb.append("    overflow: ").append(toIndentedString(overflow)).append("\n");
    sb.append("    welcomeMessage: ").append(toIndentedString(welcomeMessage)).append("\n");
    sb.append("    waitMessage: ").append(toIndentedString(waitMessage)).append("\n");
    sb.append("    comfortMessage: ").append(toIndentedString(comfortMessage)).append("\n");
    sb.append("    comfortMessageBypass: ").append(toIndentedString(comfortMessageBypass)).append("\n");
    sb.append("    mohMessage: ").append(toIndentedString(mohMessage)).append("\n");
    sb.append("    whisperMessage: ").append(toIndentedString(whisperMessage)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("queueSize");
    openapiFields.add("callOfferToneEnabled");
    openapiFields.add("resetCallStatisticsEnabled");
    openapiFields.add("overflow");
    openapiFields.add("welcomeMessage");
    openapiFields.add("waitMessage");
    openapiFields.add("comfortMessage");
    openapiFields.add("comfortMessageBypass");
    openapiFields.add("mohMessage");
    openapiFields.add("whisperMessage");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("queueSize");
    openapiRequiredFields.add("overflow");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to CallQueueQueueSettingsGetObject
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!CallQueueQueueSettingsGetObject.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in CallQueueQueueSettingsGetObject is not found in the empty JSON string", CallQueueQueueSettingsGetObject.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!CallQueueQueueSettingsGetObject.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `CallQueueQueueSettingsGetObject` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : CallQueueQueueSettingsGetObject.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the required field `overflow`
      CallQueueQueueSettingsGetObjectOverflow.validateJsonElement(jsonObj.get("overflow"));
      // validate the optional field `welcomeMessage`
      if (jsonObj.get("welcomeMessage") != null && !jsonObj.get("welcomeMessage").isJsonNull()) {
        CallQueueQueueSettingsGetObjectWelcomeMessage.validateJsonElement(jsonObj.get("welcomeMessage"));
      }
      // validate the optional field `waitMessage`
      if (jsonObj.get("waitMessage") != null && !jsonObj.get("waitMessage").isJsonNull()) {
        CallQueueQueueSettingsGetObjectWaitMessage.validateJsonElement(jsonObj.get("waitMessage"));
      }
      // validate the optional field `comfortMessage`
      if (jsonObj.get("comfortMessage") != null && !jsonObj.get("comfortMessage").isJsonNull()) {
        CallQueueQueueSettingsGetObjectComfortMessage.validateJsonElement(jsonObj.get("comfortMessage"));
      }
      // validate the optional field `comfortMessageBypass`
      if (jsonObj.get("comfortMessageBypass") != null && !jsonObj.get("comfortMessageBypass").isJsonNull()) {
        CallQueueQueueSettingsGetObjectComfortMessageBypass.validateJsonElement(jsonObj.get("comfortMessageBypass"));
      }
      // validate the optional field `mohMessage`
      if (jsonObj.get("mohMessage") != null && !jsonObj.get("mohMessage").isJsonNull()) {
        CallQueueQueueSettingsGetObjectMohMessage.validateJsonElement(jsonObj.get("mohMessage"));
      }
      // validate the optional field `whisperMessage`
      if (jsonObj.get("whisperMessage") != null && !jsonObj.get("whisperMessage").isJsonNull()) {
        CallQueueQueueSettingsGetObjectWhisperMessage.validateJsonElement(jsonObj.get("whisperMessage"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!CallQueueQueueSettingsGetObject.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'CallQueueQueueSettingsGetObject' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<CallQueueQueueSettingsGetObject> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(CallQueueQueueSettingsGetObject.class));

       return (TypeAdapter<T>) new TypeAdapter<CallQueueQueueSettingsGetObject>() {
           @Override
           public void write(JsonWriter out, CallQueueQueueSettingsGetObject value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public CallQueueQueueSettingsGetObject read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of CallQueueQueueSettingsGetObject given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of CallQueueQueueSettingsGetObject
   * @throws IOException if the JSON string is invalid with respect to CallQueueQueueSettingsGetObject
   */
  public static CallQueueQueueSettingsGetObject fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, CallQueueQueueSettingsGetObject.class);
  }

  /**
   * Convert an instance of CallQueueQueueSettingsGetObject to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

